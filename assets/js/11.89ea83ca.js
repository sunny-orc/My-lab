(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{155:function(e,n,s){"use strict";s.r(n);var a=s(0),t=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"常用插件包问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用插件包问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 常用插件包问题")]),e._v(" "),s("h2",{attrs:{id:"webuploader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webuploader","aria-hidden":"true"}},[e._v("#")]),e._v(" WebUploader")]),e._v(" "),s("h3",{attrs:{id:"多种文件类型上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多种文件类型上传","aria-hidden":"true"}},[e._v("#")]),e._v(" 多种文件类型上传")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("extensions: 'gif,jpg,jpeg,bmp,png,pdf,doc,docx,txt,xls,xlsx,ppt,pptx,zip,mp3,mp4,text,csv',\n                mimeTypes: 'image/*,text/*'\n                    //word\n                +',application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n                    //excel\n                +',application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n                    //ppt\n                +',application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation'\n                +',application/pdf'\n                +',application/zip'\n                +',application/csv'\n")])])]),s("h3",{attrs:{id:"上传文件写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传文件写法","aria-hidden":"true"}},[e._v("#")]),e._v(" 上传文件写法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// html\n            <div class=\"upload-operation\">\n              <div class=\"upload-btn manual-upload\" id=\"picker\">点击上传</div>\n              <span class=\"form-send-desc\">只能上传word、txt、excel、pdf、ppt文件，最多5个</span>\n              <span class=\"form-send-desc\" v-if=\"loading\"><i class=\"el-icon-loading\"></i>文件上传中...</span>\n            </div>\n            <div class=\"upload-success-list\">\n              <div class=\"upload-success-item\" v-for=\"(file, index) in fileList\" :key=\"index\">\n                <img class=\"upload-success-item-img fl\" :src=\"require('../../../../../assets/' + fileImg[file.fileType])\" v-if=\"fileImg[file.fileType]\" alt=\"\"/>\n                <span class=\"upload-success-item-name\" :title=\"file.fileName\">{{file.fileName}}</span>\n                <span class=\"upload-success-item-size\">{{file.fileSize > 1048576 ? `${(file.fileSize / 1024 / 1024).toFixed(2)}M` : `${(file.fileSize / 1024).toFixed(2)}K`}}</span>\n                <i class=\"el-icon-close fr upload-success-item-close\" @click=\"deleteSelectFile(index, $event)\"></i>\n              </div>\n            </div>\n            \n// js\ndeleteSelectFile(index) {\n    this.fileList.splice(index, 1);\n    this.manual.userManuals.splice(index, 1);\n},\nuploadFile() {\n    this.$nextTick(function fun() {\n        (function funName($, self) {\n            $(() => {\n            self.uploader = WebUploader.create({\n            \taccept: [{\n                    extensions: 'pdf,doc,docx,txt,xls,xlsx,ppt,pptx',\n                    mimeTypes: 'text/*,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/pdf',\n                }],\n                thumb: {\n                    width: 128,\n                    height: 128,\n                },\n                swf: '../../../../../../static/webuploader/Uploader.swf',\n                server: '/cloudfs/api/fs/upload',\n                pick: {\n                \tid: '#picker',\n                },\n                fileNumLimit: 5,\n                // fileSingleSizeLimit: 1 * 1024 * 1024    // 1 M\n            });\n            self.uploader.onFileQueued = (file) => {\n                self.loading = true;\n                self.addFile(file);\n            };\n            self.uploader.on('uploadSuccess', (file, ret) => {\n                self.fileList.forEach((ele, idx) => {\n                    console.log(ele, file);\n                    if (ele.fileName === file.name) {\n                    \tself.manual.userManuals[idx].fileId = ret.fId;\n                \t}\n            \t});\n                console.log(self.fileList);\n                self.loading = false;\n            });\n\n            self.uploader.on('uploadError', (file) => {\n                self.$message.error({\n                \tmessage: `${file.name}文件上传失败`,\n                });\n            });\n\n            self.uploader.on('all', (type) => {\n                switch (type) {\n                \tcase 'uploadFinished':\n                        console.log('所有上传完成');\n                        console.log(self.manual);\n                \tbreak;\n                    case 'filesQueued':\n                    \tself.uploader.upload();\n                    break;\n                \tdefault:\n            }\n        });\n\n        self.uploader.onError = (code, max, file) => {\n            switch (code) {\n                case 'F_EXCEED_SIZE':\n                    self.$message.error({\n                        message: `${file.name}大小超过1M`,\n                    });\n            \tbreak;\n                case 'Q_EXCEED_NUM_LIMIT':\n                    self.$message.error({\n                    \tmessage: '文件不能超过5个',\n                    });\n                break;\n                case 'F_DUPLICATE':\n                    self.$message.error({\n                    \tmessage: '选择文件存在重复提交',\n                    });\n                break;\n                case 'Q_TYPE_DENIED':\n                    self.$message.error({\n                    \tmessage: '选择的文件格式不对',\n                    });\n                break;\n                default:\n                self.$message.error({\n                \tmessage: `error:${code}`,\n                });\n                break;\n            \t}\n            };\n        });\n    }(jQuery, this));\n});\n},\n    // 往uploader队列添加合法的图片信息\n    addFile(file) {\n      if (file.getStatus() === 'invalid') {\n        this.showError(file.statusText);\n      } else {\n        const batch = {};\n        batch.fileName = file.name;\n        batch.fileSize = file.size;\n        batch.fileType = file.ext;\n        this.uploader.makeThumb(file, () => {\n          this.fileList.push(batch);\n          // if (error) {\n          //   batch.error = '不能预览';\n          //   batch.description = '';\n          //   batch.file = file;\n          //   this.fileList.push(batch);\n          // } else {\n          //   batch.src = ret;\n          //   batch.description = '';\n          //   batch.file = file;\n          //   this.fileList.push(batch);\n          // }\n        });\n        this.manual.userManuals.push(batch);\n      }\n    },\n    // 添加队列信息中是否会有错误数据\n    showError(code) {\n      let text = '';\n      switch (code) {\n        case 'exceed_size':\n          text = '文件大小超出';\n          break;\n        case 'interrupt':\n          text = '上传暂停';\n          break;\n        default:\n          text = '上传失败，请重试！';\n          break;\n      }\n      this.$message.error({\n        message: text,\n      });\n    },\n    importManual() {\n      appManage.importManual({\n        params: {\n          data: this.manual,\n        },\n      }).then((data) => {\n        if (data.state === 0) {\n          this.$message({\n            message: '应用新增成功！',\n            type: 'success',\n          });\n          this.$router.push({\n            name: 'appManagement',\n          });\n        } else {\n          this.$message({\n            message: data.message,\n            type: 'error',\n          });\n        }\n      }).catch((err) => {\n        this.$message.error(err);\n      });\n    },\n")])])])])}],!1,null,null,null);t.options.__file="Damn-hole-of-common-plugin.md";n.default=t.exports}}]);