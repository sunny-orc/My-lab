(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{157:function(e,t,r){"use strict";r.r(t);var s=r(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("操作步骤：Sources -> XHR Breakpoints -> Add breakpoint -> 输入需要断点的请求URL字符串(string) -> confirm")]),e._v(" "),r("p",[e._v("之后凡是有string的URL都会被断点")]),e._v(" "),r("p",[e._v("###Event listener breakpoints")]),e._v(" "),r("p",[e._v("可以选择明确的事件例如click，或者事件的分类，如所有的鼠标事件")]),e._v(" "),r("p",[e._v("操作步骤：sources -> Event Listener Breakpoints -> 勾选需要中断的分类，或扩展分类勾选指定的事件。")]),e._v(" "),e._m(3),e._v(" "),r("p",[e._v("中断 能捕获或者未捕获的异常的代码段")]),e._v(" "),r("p",[e._v("操作步骤：sources -> Pause on exceptions -> Pause On Caught Exceptions")]),e._v(" "),r("p",[e._v("###Function breakpoints")]),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("需要注意，目标函数所在的作用域")]),e._v(" "),e._m(5),e._m(6),e._v(" "),r("p",[e._v("(将预处理代码映射到源代码)")]),e._v(" "),r("p",[e._v("使用Source Maps 将缩减的代码映射到源代码。")]),e._v(" "),r("p",[e._v("Source Maps默认处于启用状态（Chrome 39开始）")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),r("p",[e._v("操作步骤：Sources -> Snippets -> add")]),e._v(" "),r("p",[e._v("追加js代码段，devtools会将代码段保存在文件中。当需要执行时，右击Snippets名 -> run。就可以随时执行需要的代码。")]),e._v(" "),e._m(10),e._v(" "),r("p",[e._v("要创建代码段，Sources > Snippets > 点击右键 > New")]),e._v(" "),e._m(11),e._v(" "),r("p",[e._v("可以在控制台中评估部分代码段，选中需要评估的部分，右键点击选择Evaluate in Console，就会执行部分代码段")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),r("p",[e._v("性能评估标准")]),e._v(" "),e._m(16),e._v(" "),r("p",[e._v("关键RAIL指标汇总")]),e._v(" "),r("p",[e._v("可以使用 Chrome Devtools Timeline工具记录用户操作")]),e._v(" "),e._m(17),e._v(" "),r("p",[e._v("接下来介绍Performance Panel的使用")]),e._v(" "),r("p",[e._v("https://googlechrome.github.io/devtools-samples/jank/  用无痕模式打开此链接，打开控制台")]),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),r("p",[e._v("测量动画的性能的主要依据是frames per second(FPS)。只有当动画运行在60FPS情况下用户才会觉得正常。")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),r("ul",[e._m(22),e._v(" "),r("li",[r("p",[e._v("不要让CSS过于复杂。减少使用CSS并保持CSS选择器简洁")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations",target:"_blank",rel:"noopener noreferrer"}},[e._v("缩小样式计算的范围并降低其复杂性"),r("OutboundLink")],1)]),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),r("p",[e._v("降低Recalculate Style事件的影响，可以执行以下操作：")]),e._v(" "),r("ul",[r("li",[e._v("使用"),r("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS触发器"),r("OutboundLink")],1),e._v("了解哪些CSS属性会触发布局、绘制与合成。这些属性对渲染性能的影响最大")]),e._v(" "),r("li",[e._v("转换使用影响较小的属性。"),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count",target:"_blank",rel:"noopener noreferrer"}},[e._v("坚持仅合成器属性和管理层计数"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("尽可能地避免布局。选择根本不会触发布局的CSS")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing",target:"_blank",rel:"noopener noreferrer"}},[e._v("避免布局抖动"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/rendering-tools/forced-synchronous-layouts",target:"_blank",rel:"noopener noreferrer"}},[e._v("诊断强制同步布局"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("布局抖动是指反复出现强制同步布局情况。会在Javascript从DOM反复地写入和读取时出现，将会强制浏览器反复重新计算布局。")])]),e._v(" "),e._m(25)]),e._v(" "),e._m(26),e._v(" "),r("p",[e._v("打开分析网页https://googlechrome.github.io/devtools-samples/network/gs/v1.html")]),e._v(" "),r("p",[e._v("优化点：")]),e._v(" "),e._m(27),e._v(" "),r("p",[e._v("优化后网页https://googlechrome.github.io/devtools-samples/network/gs/v2.html")]),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),r("p",[e._v("太多的请求放在单个域名中。在HTTP1.0/1.1连接中，chrome浏览器允许每个域名下的TCP链接并行最大下载数为6个")]),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),r("p",[e._v("一个请求要花很长的时间等待接受从服务器发送出来的第一个字节。")]),e._v(" "),r("p",[e._v("在waterfall中用绿色bar表示等待请求的时间长度")]),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),r("p",[e._v("在waterfall中用蓝色bar表示下载时长")]),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),r("p",[e._v("可以通过以空格分格每个属性，同时使用多个属性。例如：mime-type: image/gif larger-than: 1K。多个属性还可以用AND操作符，OR操作符还不支持。")]),e._v(" "),r("p",[e._v("支持的属性包括以下几类：")]),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),e._m(47),e._v(" "),e._m(48),e._v(" "),e._m(49),e._v(" "),e._m(50),e._v(" "),e._m(51),e._v(" "),r("p",[e._v("Chrome工具：")]),e._v(" "),e._m(52),e._v(" "),r("p",[e._v("用户可通过以下方式察觉内存问题：")]),e._v(" "),e._m(53),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),r("p",[e._v("将内存视为具有原语类型（如数字和字符串）和对象（关联数组）的图表。可以将内存表示为一个由多个互连的点组成的图表。")]),e._v(" "),e._m(56),e._v(" "),r("p",[e._v("对象可以通过以下两种方式占用内存：")]),e._v(" "),e._m(57),e._v(" "),e._m(58),e._v(" "),e._m(59),e._v(" "),e._m(60),e._v(" "),r("p",[e._v("对象自身占用内存的大小")]),e._v(" "),e._m(61),e._v(" "),r("p",[e._v("**渲染器内存是渲染检查页面的进程的内存总和：原生内存+页面的JS堆内存+页面启动的所有专用工作线程的JS堆内存。**尽管如此，即使一个小对象也可能通过阻止其他对象被自动垃圾回收进程处理的方式间接地占用大量内存")]),e._v(" "),e._m(62),e._v(" "),r("p",[e._v("一个对象一旦删除后，它引用的依赖对象就不能被GC根引用，它们所占用的内存就会被释放，一个对象占用总内存包括这些依赖对象所占用的内存")]),e._v(" "),e._m(63),e._v(" "),e._m(64),e._v(" "),r("p",[e._v("存在很多内部的GC根，从应用角度来看，存在以下种类的根：")]),e._v(" "),e._m(65),e._v(" "),r("p",[e._v("注意：在创建堆快照时，不要在console中执行代码，也不要启用调试断点")]),e._v(" "),e._m(66),e._v(" "),e._m(67),e._v(" "),r("p",[e._v("任何无法从根到达的对象都会被GC回收（不会被GC根遍历到的对象都将被内存回收）")]),e._v(" "),e._m(68),e._v(" "),e._m(69),e._v(" "),r("p",[e._v("堆是一个由互连的对象组成的网络。在数字领域，这些结构被称为图或内存图。图表由通过边缘（edges）连接的节点（Nodes）组成，两者都是给定标签")]),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),r("p",[e._v("截图快照中，能看到距离（distance）字段：是指对象到GC根的距离。如果用一个类型的所有对象的距离都一样，而有一小部分的距离比较大，那么可能存在问题，需要检查。")]),e._v(" "),e._m(72),e._v(" "),r("p",[e._v("支配对象就想一个树结构，因为每个对象都有一个支配者。一个对象的支配者可能不会直接引用它支配的对象；也就是说，支配对象树结构不是图中的生成树")]),e._v(" "),r("p",[e._v("下图中，节点#3是节点#10的支配者，但#7也在每个从GC到#10的路径中出现。如果B对象在每个从根节点到A对象的路径中都出现，那么B对象就是A对象的支配对象")]),e._v(" "),e._m(73),e._v(" "),e._m(74),e._v(" "),r("p",[e._v("Javascript对象表示")]),e._v(" "),r("p",[e._v("存在三种原语类型：")]),e._v(" "),e._m(75),e._v(" "),e._m(76),e._v(" "),r("p",[e._v("数字可以存储为：")]),e._v(" "),e._m(77),e._v(" "),r("p",[e._v("字符串可以存储为：")]),e._v(" "),e._m(78),e._v(" "),r("p",[e._v("新创建的Javascript对象会被在Javascript堆（或VM堆）分配内存。这些对象由V8垃圾回收器管理，只要还有一个强引用就在内存中保留")]),e._v(" "),e._m(79),e._v(" "),r("p",[e._v("**Cons字符串（连接字符串）**是一种由存储并联接的成对字符串组成的对象，是串联的结果。Cons字符串内容仅根据需要进行联接。如：如果连接a和b，得到字符串（a,b）这用来表示连接的结果。如果之后要再把这个结果与d连接，就得到了另一个连接字符串((a, b), d)")]),e._v(" "),r("p",[e._v("**数组（Array）**是数字类型键的对象。像字典这种有键-值对的对象就是用数组实现的")]),e._v(" "),r("p",[e._v("典型的Javascript对象可以是两个数组类型之一，用于存储：")]),e._v(" "),e._m(80),e._v(" "),r("p",[e._v("如果只有少量的睡醒，他们会被直接存储在Javscript对象本身中")]),e._v(" "),e._m(81),e._v(" "),e._m(82),e._v(" "),r("p",[e._v("每个原生对象（本地对象）都由一组之间相互关联的对象组成。比如一个DOM子树，每个节点都能访问到它的父元素，下一个子元素和下一个兄弟元素，构成了一个关联图。原生对象不会在Javascript堆中表示，这正是它们的大小为什么为零的原因")]),e._v(" "),r("p",[e._v("每个包装器对象都会保持对相应原生对象的引用，用来传递对这些本地对象的操作。这样本地对象也有到包装对象的引用。GC可以释放包装器对象不再被引用的对象组。但是，忘记释放单个包装器将保持整个组和关联的包装器。")]),e._v(" "),e._m(83),e._v(" "),e._m(84),e._v(" "),e._m(85),e._v(" "),e._m(86),e._v(" "),r("p",[e._v("在Performance panel中，勾上Memory，即可看到内存使用情况")]),e._v(" "),e._m(87),e._v(" "),r("p",[e._v("要显示内存记录，可以使用下面的代码")]),e._v(" "),e._m(88),e._m(89),e._v(" "),e._m(90),e._v(" "),r("p",[e._v("Overview窗格中的HEAP图表(NET下方)表示JS堆。Overview窗格下方是计数器窗格。内存使用按JS堆、文档、DOM节点、侦听器和GPU内存细分。")]),e._v(" "),e._m(91),e._v(" "),e._m(92),e._v(" "),e._m(93),e._v(" "),r("p",[e._v("已分离DOM节点的示例")]),e._v(" "),e._m(94),r("p",[e._v("点击代码中引用的按钮将创建一个包含10个li子级的ul节点。这些节点由代码引用，但不存在与DOM树中，因此已分离。")]),e._v(" "),e._m(95),e._v(" "),r("p",[e._v("要创建快照，打开devtools转到Memory面板，选择Heap Snapshot单选按钮，然后按Take Snapshot按钮")]),e._v(" "),r("p",[e._v("完成后，从左侧面板（名称为HEAP SNAPSHOTS）中选择该快照")]),e._v(" "),e._m(96),e._v(" "),e._m(97),e._v(" "),e._m(98),e._v(" "),e._m(99),e._v(" "),r("p",[e._v("默认以下有三个视图：")]),e._v(" "),e._m(100),e._v(" "),e._m(101),e._v(" "),r("p",[e._v("默认是以概要视图显示，显示了对象总数")]),e._v(" "),r("p",[e._v("标题行中显示：")]),e._v(" "),e._m(102),e._v(" "),r("p",[e._v("黄色背景的对象被Javascript引用")]),e._v(" "),r("p",[e._v("红色背景的对象由黄色背景色引用被分离的节点")]),e._v(" "),e._m(103),e._v(" "),r("p",[e._v("控制视图可以称作对应用对象结构的“鸟瞰视图(bird's eyes view)”。它能让你查看function内部，跟Javascript对象一样的观察VM内部对象")]),e._v(" "),r("p",[e._v("该视图提供了几个进入点：")]),e._v(" "),e._m(104),e._v(" "),r("p",[e._v("关于闭包的建议")]),e._v(" "),e._m(105),e._v(" "),e._m(106),e._v(" "),r("p",[e._v("可以使用Chrome任务管理器或者Timeline内存记录发现频繁的垃圾回收。")]),e._v(" "),r("p",[e._v("在任务管理器中，Memory或Javascript Memory值频繁上升和下降表示存在频繁的垃圾回收。")]),e._v(" "),r("p",[e._v("在Timeline记录中，JS堆或节点计数图表频繁上升和下降指示存在频繁的垃圾回收。")]),e._v(" "),e._m(107),e._v(" "),r("p",[e._v("在通常情况下，在Sources中编辑文件后，重新刷新页面所有的改变都会丢失。devtools的Workspaces可以保存所有的改变到文件系统中。")]),e._v(" "),r("p",[e._v("例子 https://glitch.com/edit/#!/smooth-bow?path=index.html:1:0")]),e._v(" "),r("p",[e._v("打开该链接，在Advanced Options > Download Project中下载工程")]),e._v(" "),r("p",[e._v("解压源码，移动解压的app到桌面")]),e._v(" "),e._m(108),e._v(" "),r("p",[e._v("点击show展示运行网站")]),e._v(" "),r("p",[e._v("点击Sources > Filesystem > Add Folder To Workspace > 选择 ~/Desktop/app")]),e._v(" "),r("p",[e._v("点击允许给Devtools读写完整路径。在Filesystem tab中，index.html,script.js,和styles.css有绿色的店。这些点以为着Devtools 为网络资源和文件资源建立了mapping")]),e._v(" "),e._m(109),e._v(" "),e._m(110),e._v(" "),r("p",[e._v("打开~/Desktop/app/styles.css。改变颜色为绿色。")]),e._v(" "),e._m(111),e._v(" "),e._m(112),e._v(" "),r("p",[e._v("h1的样式显示路径为styles.css: 1意味着本地的style.css改变会使网页h1也发生变化")]),e._v(" "),e._m(113),e._v(" "),r("p",[e._v("但是用同样的方式改变html元素，打开~/Desktop/app/index.html，这些改变将不会发生变化。原因：")]),e._v(" "),e._m(114),e._v(" "),r("p",[e._v("简而言之，DOM tree !== HTML")]),e._v(" "),r("p",[e._v("如果还是要从Sources面板中改变HTML，可以")]),e._v(" "),e._m(115),e._v(" "),e._m(116),e._v(" "),e._m(117),e._v(" "),e._m(118),e._v(" "),r("p",[e._v("使用Application面板检查、修改和调试网络应用清单、服务工作线程和服务工作线程缓存")]),e._v(" "),e._m(119),e._v(" "),e._m(120),e._v(" "),r("p",[e._v("用户能够将应用添加到移动设备的主屏幕上，需要一个网络应用清单。清单定义应用在主屏幕上的外观、从主屏幕启动时将用户定向到何处、以及应用在启动时的外观")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/web-app-manifest",target:"_blank",rel:"noopener noreferrer"}},[e._v("通过网络应用清单改进用户体验"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/app-install-banners",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用应用安装横幅"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("设置好清单后，可以使用Application面板的Manifest窗格对其进行检查")]),e._v(" "),e._m(121),e._v(" "),e._m(122),e._v(" "),r("p",[e._v("浏览器独立于网页在后台运行的脚本。这些脚本可以访问不需要网页或用户交互的功能，例如推送通知、后台同步和离线体验。")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/primers/service-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("服务工作线程简介"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/push-notifications",target:"_blank",rel:"noopener noreferrer"}},[e._v("推送通知：及时、相关且精确"),r("OutboundLink")],1)])])]),e._v(" "),r("p",[e._v("窗格中的操作按钮")]),e._v(" "),e._m(123),e._v(" "),e._m(124),e._v(" "),r("p",[e._v("Cache Storage窗格提供一个已使用（服务工作线程）Cache API花奴才能的只读资源列表")]),e._v(" "),e._m(125),e._v(" "),r("p",[e._v("只需点击一次按钮即可注销服务工作线程并清除所有缓存与存储")]),e._v(" "),e._m(126),e._v(" "),e._m(127),e._v(" "),e._m(128),e._v(" "),e._m(129),e._v(" "),e._m(130),e._v(" "),e._m(131),e._v(" "),r("p",[e._v("https://developers.google.com/web/tools/chrome-devtools/speed/get-started 介绍了如何运用performance、Audits分析网站的耗时和如何提升性能，非常有用")]),e._v(" "),e._m(132),e._v(" "),r("p",[e._v("https://developers.google.com/web/tools/chrome-devtools/accessibility/reference accessibility指标介绍")]),e._v(" "),r("p",[e._v("lighthouse从5个方面评估得分，目前总共有72个指标（lighthouse V3版本）")]),e._v(" "),e._m(133),e._v(" "),e._m(134),e._v(" "),r("ul",[r("li",[r("p",[e._v("1.Critical Request Chains (关键请求链) 概念来自于关键渲染路径(CRP)优化策略。CRP通过确定优先加载的资源以及加载顺序，允许浏览器尽可能快地加载页面")]),e._v(" "),r("p",[e._v("参照"),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/",target:"_blank",rel:"noopener noreferrer"}},[e._v("critical-rendering-path"),r("OutboundLink")],1)]),e._v(" "),e._m(135),e._v(" "),r("p",[e._v("**如何通过此审查？**在Lighthouse的Chrome扩展程序中，报告将生成一个类似如下的图表：")]),e._v(" "),e._m(136),r("p",[e._v("此图表表示页面的关键请求链。从lighthouse/到/css的路径形成一条链。从lighthouse/到css/devsite-googler-buttons.css的路径形成另一条链。上面的图表的“分数”为7分")]),e._v(" "),e._m(137),e._v(" "),e._m(138),e._v(" "),r("p",[e._v("优化以上任一因素都可提升页面加载速度")])]),e._v(" "),r("li",[r("p",[e._v("2.Defer unused CSS")]),e._v(" "),r("p",[e._v("在默认情况下，浏览器必须在展示、渲染任何内容到用户视图之前下载，解析和处理所有外部样式表。对于浏览器来说，视图在处理外部样式表之前展示内容是没有意义的，因为样式表可能包含一些影响页面样式的规则。")]),e._v(" "),r("p",[e._v("每个外部样式表都必须通过网络下载。毫无疑问过多的下载加大了用户看见内容的时间")]),e._v(" "),r("p",[e._v("无用的CSS也会减慢浏览器的渲染树的生成。因为在生成渲染树之前，要解析每一个DOM节点，并且给节点加上CSS规则。无用的CSS只会加大对计算样式的时间")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[e._m(139),e._v(" "),r("li",[r("p",[e._v("内联关键CSS。理论上，最高效的方式是内联关键CSS到HTML的head中。一旦HTML下载完成，浏览器就拥有了显示网页的一些条件。有以下工具可以帮助自动内联关键CSS")]),e._v(" "),r("p",[e._v("Node:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/pocketjoso/penthouse",target:"_blank",rel:"noopener noreferrer"}},[e._v("penthouse"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/addyosmani/critical",target:"_blank",rel:"noopener noreferrer"}},[e._v("critical"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bezoerb/inline-critical",target:"_blank",rel:"noopener noreferrer"}},[e._v("inline-critical"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Apache:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/apache/incubator-pagespeed-mod",target:"_blank",rel:"noopener noreferrer"}},[e._v("mod_pagespeed"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Nginx:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/pagespeed/ngx_pagespeed",target:"_blank",rel:"noopener noreferrer"}},[e._v("ngx_pagespeed"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Webpack:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/kriasoft/isomorphic-style-loader/",target:"_blank",rel:"noopener noreferrer"}},[e._v("isomorphic-style-loader"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Rollup:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/FullHuman/rollup-plugin-purgecss",target:"_blank",rel:"noopener noreferrer"}},[e._v("rollup-plugin-purgecss"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Gulp:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/fmal/gulp-inline-source",target:"_blank",rel:"noopener noreferrer"}},[e._v("gulp-inline-source"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Grunt:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/fatso83/grunt-penthouse",target:"_blank",rel:"noopener noreferrer"}},[e._v("grunt-penthouse"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bezoerb/grunt-critical",target:"_blank",rel:"noopener noreferrer"}},[e._v("grunt-critical"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("推迟非关键CSS加载。非关键CSS可以按需加载。例如，将点击按钮后弹出的模态框，该模态框只有在点击按钮后出现，因此没有必要在首次加载中出现。有以下工具可以帮助推迟加载非关键CSS")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/filamentgroup/loadCSS",target:"_blank",rel:"noopener noreferrer"}},[e._v("loadCSS"),r("OutboundLink")],1)])])])])]),e._v(" "),r("li",[r("p",[e._v("3.Enable Text Compression（使文本压缩）")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("lighthouse会列出所有发送没有文本压缩的请求。在服务于这些请求的服务器上使用文本压缩可以通过这个审查")]),e._v(" "),r("ul",[e._m(140),e._v(" "),r("li",[r("p",[e._v("如何在服务器中使文本压缩")]),e._v(" "),r("p",[e._v('Brotli是新的压缩方式，但是不通用支持所有浏览器。可以通过"how to enable Brotli compression in '),r("server",[e._v('"搜索实现方式，其中server是服务器的名称')])],1),e._v(" "),r("p",[e._v("将GZIP作为Brotli的备选，GZIP适用于所有浏览器，但是没有Brotli高效")])]),e._v(" "),e._m(141)])]),e._v(" "),r("li",[r("p",[e._v("4.Estimated Input Latency(预计输入延迟时间)")]),e._v(" "),r("p",[e._v("根据RAIL模型测量，应用在100毫秒的时间响应用户输入不会被认为应用反应迟缓。但是该审查规则的目标得分是50毫秒。原因是Lighthouse使用一个代理指标来测量应用在响应用户输入方面的表现：主线程的可用性。lighthouse假定应用需要50毫秒的时间来完全响应用户的输入（从实现任意Javascript执行到以物理方式将新像素绘制到屏幕）。如果主线程的不可用时间达50毫秒或更长，那么，应用将没有足够的时间完成响应")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("优化代码在浏览器中的运行方式。")]),e._v(" "),r("p",[e._v("理解像素管道：")]),e._v(" "),e._m(142),e._v(" "),r("ul",[e._m(143),e._v(" "),e._m(144),e._v(" "),e._m(145),e._v(" "),r("li",[r("p",[e._v("绘制。绘制是填充像素的过程。它涉及绘出文本、颜色、图像、边框和阴影，基本上包括元素的每个可视部分。绘制一般是在多个表面（通常称为层）上完成的。绘制实际上分为两个任务：1).创建绘图调用的列表 2).填充像素")]),e._v(" "),r("p",[e._v("不一定每帧都总是经过管道每个部分的处理。实际上，不管是使用Javascript、CSS还是网络动画，在实现视觉变化时，管道针对指定帧的运行通常有三种方式：")]),e._v(" "),e._m(146),e._v(" "),r("p",[e._v("版本3开销最小，最适合应用生命周期中的高压力点，例如动画或滚动")]),e._v(" "),r("p",[e._v("如果想知道更改任何指定CSS属性将触发上述三个版本中的哪一个，可查看"),r("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS触发器"),r("OutboundLink")],1)])]),e._v(" "),e._m(147)]),e._v(" "),r("p",[e._v("上面的描述，其实就是包括将计算转移到网络工作线程以腾出主线程、重构CSS选择器以执行较少的计算，以及使用CSS属性，其可将浏览器密集型的操作数将至最低")]),e._v(" "),r("p",[e._v("对于此审查，并不会测量应用真正花了多少时间来响应用户输入。换句话说，它不会测量应用对用户输入的响应在视觉上是否完整")]),e._v(" "),r("p",[e._v("要手动对此进行测量，可以使用Chrome Devtools Timeline录制。基本思路是启动一个录制、执行要测量的用户输入、停止录制，然后分析火焰图已确保像素管道的所有阶段都在50毫秒内完成")])])])]),e._v(" "),r("li",[r("p",[e._v("5.First Contentful Paint（首次内容绘制，FCP）")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("为了加速首次内容绘制，加速资源下载或减少在渲染DOM内容时发生的阻塞，可以做以下方式优化")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("减少渲染阻塞的外部样式和脚本的数量。")]),e._v(" "),e._m(148),e._v(" "),e._m(149),r("p",[e._v("第一个样式表声明未提供任何媒体类型或查询，因此适用于所有情况，始终会阻塞渲染；")]),e._v(" "),r("p",[e._v("第二个样式表只有在打印内容时适用，因此在网页首次加载时，该样式表不需要阻塞渲染；")]),e._v(" "),r("p",[e._v("最后一个样式表声明提供由浏览器执行的“媒体查询”，符合条件时，浏览器将阻塞渲染，直至样式表下载并处理完毕")]),e._v(" "),e._m(150),e._v(" "),r("p",[e._v("第三方脚本虽然可以方便开发者开发令人困扰的功能，但是同样是性能减慢的主要因素和发生一些超出控制的问题")]),e._v(" "),r("p",[e._v("可以借助一些第三方的web速度测试工具，如 "),r("a",{attrs:{href:"https://developer.chrome.com/devtools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome DevTools"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://developers.google.com/speed/pagespeed/insights/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PageSpeed Insights"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://www.webpagetest.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebPageTest"),r("OutboundLink")],1),e._v("来测试性能。这些工具将展示丰富的诊断信息来告诉开发者引用了多少第三方的脚本和将花费多少的时间来执行")]),e._v(" "),r("p",[e._v("WebPage Test的"),r("a",{attrs:{href:"https://www.google.com/url?q=https://www.webpagetest.org/result/180222_J4_8fee6855d6f45719e4f37d8d89ecbc20/1/domains/&sa=D&ust=1519325015196000&usg=AFQjCNGrRivilJS9yqqpombsUMQZQJx2nw",target:"_blank",rel:"noopener noreferrer"}},[e._v("域分解,domain breakdown"),r("OutboundLink")],1),e._v("能可视化的分析内容来自哪些第三方域。它通过总字节和请求数量两种方式来分解")]),e._v(" "),e._m(151),e._v(" "),r("p",[e._v("改善第三方脚本的工作流一般如下：")]),e._v(" "),e._m(152),e._v(" "),e._m(153),e._v(" "),e._m(154),e._v(" "),r("p",[e._v("WebPageTest中还有一个页签 single-point of failure(SPOF)。这允许模拟超时或加载资源的完全失败。SPOF有助于测试第三方内容的网络弹性，以确定在服务负载过重或暂时不可用的情况下，页面能保持多好。")]),e._v(" "),r("p",[e._v("**使用长任务检测昂贵的iframes：**当第三方iframes中的脚本需要花很长的时间运行时，将阻塞主线程延迟别的任务运行。这些长任务可能会导致负面的用户体验，导致事件处理程序迟缓或帧丢失")]),e._v(" "),r("p",[e._v("可以利用Javascript  "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver",target:"_blank",rel:"noopener noreferrer"}},[e._v("PerformanceObserver"),r("OutboundLink")],1),e._v("API 和 observe "),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics#long_tasks",target:"_blank",rel:"noopener noreferrer"}},[e._v("longtask"),r("OutboundLink")],1),e._v(" entries。这些入口包含属性性质，我们可以跟踪负责这个任务的框架上下文")]),e._v(" "),e._m(155),e._v(" "),r("ul",[e._m(156),e._v(" "),r("li",[r("p",[e._v("如果第三方服务很慢，可以考虑自托管脚本。例如，如果想减少DNS或传输次数，可以通过改善HTTP缓存都或者采用像HTTP/2服务端push技术。但采用自托管会带来一些问题。如：脚本会过时，如果不通过认为的更新，将会阻止获取到新的代码导致产生潜在问题")]),e._v(" "),r("p",[e._v("还有一个选择方案，采用"),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/primers/service-workers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Workers"),r("OutboundLink")],1),e._v("来缓存内容，该方案可以通过创建加载策略来控制不同的脚本的预加载等")])]),e._v(" "),e._m(157),e._v(" "),e._m(158),e._v(" "),r("li",[r("p",[e._v('利用iframe构造"沙盒"脚本。在一些情况下，第三方脚本可以直接加在到iframe中。通过将这些脚本移至iframe中，它们将不会阻塞主页面的执行。'),r("a",{attrs:{href:"https://www.ampproject.org/learn/about-how/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AMP"),r("OutboundLink")],1),e._v("采用了这种方式将Javascript移出关键路径。但是需要注意这种方式还是会则色onload事件，因此不要将关键方法放在onload中执行")])]),e._v(" "),r("li",[r("p",[e._v("懒加载第三方资源。懒加载有很多种方案，例如当用户滚动到当前页时，再进行请求对应的脚本，或在主页内容加载之后延迟加载内容，但是在用户可能与页面交互之前。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/aFarkas/lazysizes",target:"_blank",rel:"noopener noreferrer"}},[e._v("LazySizes"),r("OutboundLink")],1),e._v("、"),r("a",{attrs:{href:"https://github.com/verlok/lazyload",target:"_blank",rel:"noopener noreferrer"}},[e._v("lazyload"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/web/updates/2016/04/intersectionobserver",target:"_blank",rel:"noopener noreferrer"}},[e._v("IntersectionObserver"),r("OutboundLink")],1),e._v("。通常检测元素是否在可视区域的方式为监听scroll或resize事件，然后利用诸如getBoundingClientRect()的DOM APIs来计算元素的相对于可视区的位置，这个方式是可以实施的，但并不是有效的。intersectionObserver是新的浏览器API，允许高效的检测出被观察元素进入和离开可视区域。")])])])]),e._v(" "),e._m(159),e._v(" "),r("ul",[e._m(160),e._v(" "),r("li",[e._v("明智地使用"),r("strong",[e._v("标记管理器")]),e._v("。"),r("a",{attrs:{href:"https://www.google.com/analytics/tag-manager/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google Tag Manager"),r("OutboundLink")],1),e._v(" (GTM)就是一个受欢迎的标记管理器。标记管理器可以通过减少对外部资源的调用来提高页面加载性能——只要没有引入大量标记。它们还允许标记在一个唯一的位置收集值。对于GTM，就是数据层"),r("a",{attrs:{href:"https://developers.google.com/tag-manager/devguide",target:"_blank",rel:"noopener noreferrer"}},[e._v("(Data Layer)"),r("OutboundLink")],1),e._v("。如果多个第三方希望触发转换跟踪数据，可以通过从数据层提取数据来实现")]),e._v(" "),r("li",[e._v("使用标记管理存在风险。当使用标记管理器时，要非常小心，以避免减慢页面加载的速度")]),e._v(" "),r("li",[e._v("避免脚本污染全局作用域")])]),e._v(" "),e._m(161),e._v(" "),r("p",[e._v("在页面中添加第三方脚本意味着对源的信任程度。有一些策略可以使他们对性能和安全影响最小化：")]),e._v(" "),e._m(162)]),e._v(" "),e._m(163),e._v(" "),e._m(164),e._v(" "),r("li",[r("p",[e._v("利用"),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[e._v("tree shaking"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/code-splitting/",target:"_blank",rel:"noopener noreferrer"}},[e._v("code splitting"),r("OutboundLink")],1),e._v("优化Javascript启动和减少Javascript负载")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Tree shaking")]),e._v(" "),r("p",[e._v("HTTP Archive提供的移动设备上JavaScript的平均传输大小约为350 KB。但这只是传输大小。Javascript通常是在网络传输时被压缩，意味着Javascript的实际体积在浏览器解压后将变得更大。这点指出，就资源处理而言，压缩并无关紧要。900KB的压缩Javascript，在解析、编译和执行仍然是900KB，即使在传输被压缩到300KB")]),e._v(" "),r("p",[e._v("Javascript在执行中是昂贵的资源！它不像图像，一旦下载只需花费简单的解码时间即可。Javascript必须解析、编译然后执行。这些使得Javascript比别的类型的资源更加昂贵")]),e._v(" "),e._m(165),e._v(" "),r("p",[e._v("Tree shaking是一种死代码消除的方式。这个方式在Rollup中受广大欢迎，同样在webpack中也有这个概念。树中的每个节点都代表一个依赖项，为应用程序提供不同的功能。在现代app中，这些依赖都是通过import的方式引入进来")]),e._v(" "),r("p",[e._v("可以在github中查看例子"),r("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack-tree-shaking-example"),r("OutboundLink")],1),e._v("结合文章"),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[e._v("tree-shaking"),r("OutboundLink")],1),e._v("理解如何用webpack使用tree-shaking瘦身生产代码~")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/code-splitting/",target:"_blank",rel:"noopener noreferrer"}},[e._v("code splitting"),r("OutboundLink")],1)])])])])])]),e._v(" "),e._m(166),e._v(" "),e._m(167),e._v(" "),e._m(168),e._v(" "),e._m(169),e._v(" "),e._m(170),e._v(" "),e._m(171),e._v(" "),e._m(172),e._v(" "),r("li",[r("p",[e._v("13.Offscreen Images")]),e._v(" "),r("p",[e._v("屏幕外的图片在加载页面时用户是看不见的，在初始化页面加载时没有必要下载这些图片。推迟加载这些图片可以加速页面加载和交互时间")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("懒加载屏幕外图片，可以考虑使用"),r("a",{attrs:{href:"https://developers.google.com/web/updates/2016/04/intersectionobserver",target:"_blank",rel:"noopener noreferrer"}},[e._v("IntersectionObserver"),r("OutboundLink")],1),e._v("。但是在使用IntersectionObserver时，最好加入"),r("a",{attrs:{href:"https://github.com/w3c/IntersectionObserver/tree/master/polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("polyfill"),r("OutboundLink")],1),e._v("，原生浏览器支持有限")])]),e._v(" "),e._m(173),e._v(" "),r("li",[r("p",[e._v("15.Properly Size Images")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),e._m(174),e._v(" "),r("p",[e._v("可以使用像"),r("a",{attrs:{href:"https://www.npmjs.com/package/gulp-responsive",target:"_blank",rel:"noopener noreferrer"}},[e._v("gulp-responsive"),r("OutboundLink")],1),e._v(" 或 "),r("a",{attrs:{href:"https://www.npmjs.com/package/responsive-images-generator",target:"_blank",rel:"noopener noreferrer"}},[e._v("responsive-images-generator"),r("OutboundLink")],1),e._v("的工具可以帮助自动转换图片成多个格式")])]),e._v(" "),r("li",[r("p",[e._v("16.Perceptual Speed Index（速度指标）")]),e._v(" "),r("p",[e._v("速度指标是一个页面加载性能指标，展示明显填充页面内容的速度。此指标的分数越低越好")]),e._v(" "),r("p",[e._v("要降低速度指标分数，需要优化页面以使加载速度从视觉上显得更快")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/",target:"_blank",rel:"noopener noreferrer"}},[e._v("优化内容效率"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/",target:"_blank",rel:"noopener noreferrer"}},[e._v("优化关键渲染路径"),r("OutboundLink")],1)])])]),e._v(" "),e._m(175),e._v(" "),e._m(176),e._v(" "),r("li",[r("p",[e._v("19.Serve Images in Next-Gen Formats")]),e._v(" "),r("p",[e._v("JPEG 2000，JPEG XR和WebP这些图片格式相比老的JPEG和PNG格式有更好的压缩和质量特征。用新的编码方式意味着加载更快和更少的下载流量")]),e._v(" "),r("p",[e._v("WebP支持Chrome和Opera浏览器")]),e._v(" "),r("p",[e._v("浏览器支持情况：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://caniuse.com/#feat=webp",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebP"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://caniuse.com/#feat=jpeg2000",target:"_blank",rel:"noopener noreferrer"}},[e._v("JPEG 2000"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://caniuse.com/#feat=jpegxr",target:"_blank",rel:"noopener noreferrer"}},[e._v("JPEG XR"),r("OutboundLink")],1)])])]),e._v(" "),e._m(177),e._v(" "),e._m(178),e._v(" "),e._m(179),e._v(" "),e._m(180),e._v(" "),e._m(181)]),e._v(" "),e._m(182),e._v(" "),e._m(183),e._v(" "),e._m(184),e._v(" "),r("ul",[r("li",[r("p",[e._v("1.Avoids Application Cache")]),e._v(" "),r("p",[e._v("应用缓存（也称为 AppCache）已"),r("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/browsers.html#offline",target:"_blank",rel:"noopener noreferrer"}},[e._v("弃用"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("如果未检测到 AppCache 清单，则表示通过了审查")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("用服务工作线程"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cache API"),r("OutboundLink")],1)])]),e._v(" "),e._m(185),e._v(" "),e._m(186),e._v(" "),r("li",[r("p",[e._v("4.Avoids Deprecated APIs")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.chromestatus.com/features#deprecated",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome Platform Status"),r("OutboundLink")],1),e._v("记录版本更新，会列出废弃的APIs，替换这些APIs")])]),e._v(" "),e._m(187),e._v(" "),r("li",[r("p",[e._v("6.Avoids Mutation Events In Its Own Scripts（网站在其自身的脚本中不使用突变事件）")]),e._v(" "),r("p",[e._v("在URLs下，Lighthouse报告它在代码中发现的每个突变事件侦听器。将每个突变事件替换为 "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("MutationObserver")]),r("OutboundLink")],1)])]),e._v(" "),e._m(188),e._v(" "),e._m(189),e._v(" "),e._m(190),e._v(" "),r("li",[r("p",[e._v("10.Avoids Web SQL")]),e._v(" "),r("p",[e._v("Web SQL已弃用，考虑替换为一个可替代的现代数据库(如"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("IndexedDB"),r("OutboundLink")],1),e._v(")")])]),e._v(" "),r("li",[r("p",[e._v("11.Displays Images With Incorrect Aspect Ratio")]),e._v(" "),r("p",[e._v("如果呈现的图像与源文件中的高宽比(“自然”高宽比)明显不同，那么呈现的图像可能会看起来失真，可能会造成不愉快的用户体验")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[e._v("避免将元素的宽度或高度设置为不同大小容器的百分比")]),e._v(" "),r("li",[e._v("避免设置与源图像尺寸不同的显式宽度或高度值")]),e._v(" "),r("li",[e._v("考虑使用"),r("a",{attrs:{href:"https://www.npmjs.com/package/css-aspect-ratio",target:"_blank",rel:"noopener noreferrer"}},[e._v("css-aspect-ratio"),r("OutboundLink")],1),e._v("或"),r("a",{attrs:{href:"https://css-tricks.com/aspect-ratio-boxes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aspect Ratio Boxes"),r("OutboundLink")],1),e._v("有助于保持高宽比")]),e._v(" "),r("li",[e._v("在可能的情况下，最好在HTML中指定图像的宽度和高度，这样浏览器就可以为图像分配空间，从而防止它在页面加载时跳来跳去。在HTML中指定宽度和高度比CSS更理想，因为浏览器在解析CSS之前会分配空间。在实践中，如果您使用的是响应式图像，这种方法可能会很困难，因为在知道视口尺寸之前，无法指定宽度和高度")])])]),e._v(" "),r("li",[r("p",[e._v("12.Includes Front-End Javascript Libraries With Known Security Vulnerabilities")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://snyk.io/vuln?packageManager=all",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snyk's Vulnerability DB"),r("OutboundLink")],1),e._v("中成列每个库的漏洞，避免使用这些漏洞，除非新版本更新了这些问题")]),e._v(" "),r("p",[e._v("检测漏洞库，可以通过以下方式：")]),e._v(" "),r("ul",[r("li",[e._v("运行"),r("a",{attrs:{href:"https://www.npmjs.com/package/js-library-detector",target:"_blank",rel:"noopener noreferrer"}},[e._v("Library Detector For Chrome"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("检测依赖库是否在"),r("a",{attrs:{href:"https://snyk.io/vuln?packageManager=all",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snyk's Vulnerability DB"),r("OutboundLink")],1),e._v("列表中")])])]),e._v(" "),e._m(191),e._v(" "),r("li",[r("p",[e._v('14.Opens External Anchors Using rel="noopener"')]),e._v(" "),e._m(192),e._v(" "),e._m(193),e._v(" "),r("p",[r("a",{attrs:{href:"https://jakearchibald.com/2016/performance-benefits-of-rel-noopener/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rel=noopener 的性能优势"),r("OutboundLink")],1)]),e._v(" "),e._m(194),e._v(" "),e._m(195)]),e._v(" "),e._m(196),e._v(" "),r("li",[r("p",[e._v("16.Some Insecure Resources Can Be Upgraded To HTTPS")]),e._v(" "),r("p",[e._v("当HTTPS站点请求不安全(HTTP)资源时，被称为混合内容("),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content",target:"_blank",rel:"noopener noreferrer"}},[e._v("mixed content"),r("OutboundLink")],1),e._v(")错误。一些浏览器默认阻止不安全资源请求。")])]),e._v(" "),e._m(197),e._v(" "),e._m(198),e._v(" "),r("li",[r("p",[e._v("19.Uses Passive Event Listeners To Improve Scrolling Performance")]),e._v(" "),e._m(199),e._v(" "),e._m(200),e._v(" "),e._m(201),e._v(" "),e._m(202),r("p",[e._v("不过，在不支持被动事件侦听器的浏览器中，第三个参数是一个布尔值，以表明此事件是应触发还是采集。因此，使用上面的语法可能会导致意外后果")]),e._v(" "),r("p",[e._v("如何安全地实现被动事件侦听器，参阅"),r("a",{attrs:{href:"https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection",target:"_blank",rel:"noopener noreferrer"}},[e._v("功能检测"),r("OutboundLink")],1),e._v("中的 polyfill")])])]),e._v(" "),e._m(203),e._v(" "),e._m(204),e._v(" "),e._m(205),e._v(" "),e._m(206),e._v(" "),e._m(207),e._v(" "),e._m(208),e._v(" "),e._m(209),e._v(" "),e._m(210),e._v(" "),e._m(211),e._v(" "),e._m(212),e._v(" "),e._m(213),e._m(214),e._v(" "),e._m(215),e._v(" "),e._m(216),e._v(" "),e._m(217),e._m(218),e._v(" "),r("p",[e._v("日志组可以彼此嵌套。")]),e._v(" "),e._m(219),e._m(220),e._v(" "),e._m(221),e._v(" "),e._m(222),e._m(223),e._v(" "),e._m(224),e._v(" "),e._m(225),e._v(" "),e._m(226),e._v(" "),e._m(227),e._v(" "),e._m(228),e._m(229),e._v(" "),r("p",[e._v("方法的第一个参数中可能会包含一个或多个格式说明符。格式说明符由一个%符号与后面紧跟的一个字母组成，字母指示应用到值的格式。字符串后的参数会按顺序应用到占位符中。")]),e._v(" "),r("p",[e._v("格式说明符列表：")]),e._v(" "),e._m(230),e._v(" "),r("p",[e._v("对%c的示例")]),e._v(" "),e._m(231),e._m(232),e._v(" "),e._m(233),e._v(" "),e._m(234),e._m(235),e._v(" "),r("p",[e._v("可以在table()的第二个参数记录更多高级对象。查看希望显示的属性字符串的数组")]),e._v(" "),e._m(236),e._m(237),e._v(" "),e._m(238),e._v(" "),e._m(239),e._m(240),e._v(" "),e._m(241),r("p",[e._v("###对执行进行计数")]),e._v(" "),e._m(242),e._v(" "),e._m(243),e._m(244),e._v(" "),e._m(245),e._v(" "),e._m(246),e._v(" "),e._m(247),e._v(" "),e._m(248),e._v(" "),e._m(249),e._m(250),e._v(" "),e._m(251),e._v(" "),r("p",[e._v("例如，使用Ajax post调用设置一个错误处理程序，用于收集未捕捉异常的相关信息并将其报告回服务器。这样就可以记录用户浏览器中发生的所有错误并获得相关通知。")]),e._v(" "),e._m(252)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"google-devtools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#google-devtools","aria-hidden":"true"}},[this._v("#")]),this._v(" google devtools")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"pause-your-code-with-breakpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pause-your-code-with-breakpoints","aria-hidden":"true"}},[this._v("#")]),this._v(" Pause Your Code With BreakPoints")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"xhr-fetch-breakpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xhr-fetch-breakpoints","aria-hidden":"true"}},[this._v("#")]),this._v(" XHR/Fetch breakpoints")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"exception-breakpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exception-breakpoints","aria-hidden":"true"}},[this._v("#")]),this._v(" Exception breakpoints")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("代码中断点调试方式-"),t("code",[this._v("debug(functionName)")]),this._v("，也可以直接在devtools中在所在行断点")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("(function () {\n    function hey() {\n        console.log('hey');\n    }\n    function yo() {\n        console.log('yo');\n    }\n    debug(yo); // 可以运行\n    yo();\n})();\ndebug(hey); // 不可运行\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"map-preprocessed-code-to-source-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map-preprocessed-code-to-source-code","aria-hidden":"true"}},[this._v("#")]),this._v(" Map Preprocessed Code to Source Code")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"debug-javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debug-javascript","aria-hidden":"true"}},[this._v("#")]),this._v(" Debug Javascript")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在代码中植入console.log()的方式是"),t("strong",[this._v("错误")]),this._v("的。应该用devtools的debugging工具。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"create，save，and-run-snippets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create，save，and-run-snippets","aria-hidden":"true"}},[this._v("#")]),this._v(" Create，save，and run Snippets")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"创建代码段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建代码段","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建代码段")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"运行代码段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行代码段","aria-hidden":"true"}},[this._v("#")]),this._v(" 运行代码段")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"分析运行时性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析运行时性能","aria-hidden":"true"}},[this._v("#")]),this._v(" 分析运行时性能")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"使用rail模型评估性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用rail模型评估性能","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用RAIL模型评估性能")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("RAIL")]),this._v("是一种以用户为中心的性能模型。每个网络应用均具有与生命周期有关的四个不同方面，且这些方面以不同的方式影响着性能：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Response")]),this._v(" "),t("li",[this._v("Animation")]),this._v(" "),t("li",[this._v("Idle")]),this._v(" "),t("li",[this._v("Load")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("以用户为中心：最终目标不是让网站在任何特定设备上都能运行很快，而是使用户满意")]),e._v(" "),r("li",[e._v("立即响应用户：在100毫秒以内确认用户输入")]),e._v(" "),r("li",[e._v("设置动画或滚动时，在10毫秒以内生成帧")]),e._v(" "),r("li",[e._v("最大程度增加主线程的空闲时间")]),e._v(" "),r("li",[e._v("持续吸引用户，在1000毫秒以内呈现交互内容")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",[r("thead",[r("tr",[r("th",[e._v("RAIL步骤")]),e._v(" "),r("th",[e._v("关键指标")]),e._v(" "),r("th",[e._v("用户操作")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("响应")]),e._v(" "),r("td",[e._v("输入延迟时间（从点按到绘制）小于100毫秒")]),e._v(" "),r("td",[e._v("用户点按按钮（例如打开导航）")])]),e._v(" "),r("tr",[r("td",[e._v("动画")]),e._v(" "),r("td",[e._v("每个帧的工作（从JS到绘制）完成时间小于16毫秒")]),e._v(" "),r("td",[e._v("用户滚动页面，拖动手指（例如，打开菜单）或看到动画。拖动时，应用的响应与手指位置有关（例如，拉动刷新、滑动轮播）。此指标仅适用于拖动的持续阶段，不使用于开始阶段")])]),e._v(" "),r("tr",[r("td",[e._v("空闲")]),e._v(" "),r("td",[e._v("主线程JS工作分成不大于50毫秒的块")]),e._v(" "),r("td",[e._v("用户没有与页面交互，但主线程应足够用于处理下一个用户输入")])]),e._v(" "),r("tr",[r("td",[e._v("加载")]),e._v(" "),r("td",[e._v("页面可以在1000毫秒内就绪")]),e._v(" "),r("td",[e._v("用户加载页面并看到关键路径内容")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"分析结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析结果","aria-hidden":"true"}},[this._v("#")]),this._v(" 分析结果")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"analyse-frames-per-second-fps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#analyse-frames-per-second-fps","aria-hidden":"true"}},[this._v("#")]),this._v(" Analyse frames per second(FPS)")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[r("p",[e._v("观察FPS柱状图。可以看出，每帧会显示为一段柱状，且每帧耗时越长，高度越低。")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/fps1.jpg",alt:"fps1"}})])]),e._v(" "),r("li",[r("p",[e._v("观察CPU图。其中CPU图的颜色和Summary中的颜色是一致的，当CPU饼图已经被除了白色填充蛮时，代表CPU已经达到了最大值。长时间达到最大值，会导致CPU只能做更少的工作。")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/fps2.jpg",alt:"fps2"}})])]),e._v(" "),r("li",[r("p",[e._v("将鼠标移到FPS、CPU或者NET图上时，会显示在这一时刻网页的屏幕快照。可以从左到右移动鼠标来重新播放记录。这种方式有利于人工分析动画的进程。")])]),e._v(" "),r("li",[r("p",[e._v("在"),r("strong",[e._v("Frames")]),e._v("中，移动鼠标到绿色区域中。devTools会展示出每帧的FPS，每一帧可能都小于规定的60FPS（即16ms）。")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/fps3.jpg",alt:"fps2"}})]),e._v(" "),r("p",[e._v("当然，在这个例子中，这个网页很明显在执行上是不好的。但是在实际上，也并没有那么明显，因此使用工具做测量带来了很大的便利。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Open the FPS meter")]),e._v("，当运行网页时，该工具为FPS提供了实时评估。")]),e._v(" "),r("p",[e._v("1). 打开命令行菜单 Command+Shift+P(mac)和Control+Shift+P(Windows, Linux)")]),e._v(" "),r("p",[e._v("2). 输入"),r("strong",[e._v("Rendering")]),e._v("，选择"),r("strong",[e._v("Show Rendering")])]),e._v(" "),r("p",[e._v("3). 在"),r("strong",[e._v("Rendering tab")]),e._v("中，勾选"),r("strong",[e._v("FPS Meter")]),e._v("，会在视口右上角出现一个实时分析图")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/fps4.jpg",alt:"fps4"}})])]),e._v(" "),r("li",[r("p",[e._v("关注Summary tab")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("网页花了大部分的时间在渲染上。因为性能是减少工作的艺术，所以目标是减少花在渲染工作上的时间")])]),e._v(" "),r("li",[r("p",[e._v("详述Main。Main展现的是主线程的所有活动的火焰图。x轴代表随着时间变化的记录，每一个条形图代表一个事件，长度代表耗时时长。y轴代表回调栈。上面的事件会调起下面的事件。")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/fps5.jpg",alt:"fps5"}})])]),e._v(" "),r("li",[r("p",[e._v("需要注意如果在Animation Frame Fired 事件的右上角有一个红色三角，代表该事件发生了错误警告")])])])]),e._v(" "),r("li",[r("p",[e._v("Network视图")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/network.jpg",alt:"network"}})]),e._v(" "),r("p",[e._v("Requests遵循以下颜色分类:")]),e._v(" "),r("ul",[r("li",[e._v("HTML: 蓝色，请求左上角如果有一个深蓝的正方形，代表是高优先级的请求，天蓝色的正方形，代表低优先的请求")]),e._v(" "),r("li",[e._v("CSS: 紫色")]),e._v(" "),r("li",[e._v("JS: 黄色")]),e._v(" "),r("li",[e._v("Images: 绿色")])]),e._v(" "),r("p",[e._v("一条请求由三部分组成：左边一条线，中间一根条形(包括深色部分和浅色部分)，右边一条线")]),e._v(" "),r("p",[e._v("左边线表示请求发送前的所有事情")]),e._v(" "),r("p",[e._v("中间浅色部分表示请求发送+等待(TTFB)")]),e._v(" "),r("p",[e._v("中间深色部分表示内容下载")]),e._v(" "),r("p",[e._v("右边线表示等待主线程经过时间，但是不在Timing tab中")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/network2.jpg",alt:"network2"}})]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/network3.jpg",alt:"network3"}})])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"分析运行时性能小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析运行时性能小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 分析运行时性能小结")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("不要编写会强制浏览器重新计算布局的Javascript。将读取和写入功能分开，并首先执行读取")]),this._v(" "),t("p",[this._v("Javascript计算，特别是"),t("strong",[this._v("会触发大量视觉变化的计算会降低应用性能")]),this._v("。不要让时机不当或长时间运行的Javascript影响用户交互")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在进行Timeline记录时，检查大型"),t("strong",[this._v("Recalculate Style")]),this._v("事件的记录（以紫色显示）。点击Recalculate Style事件可以在Details窗格中查看更多相关信息。"),t("strong",[this._v("如果样式更改需要较长时间")]),this._v("，对性能的影响会非常大。"),t("strong",[this._v("如果样式计算会影响大量元素")]),this._v("，也需要改进。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/fps6.jpg",alt:"fps6"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("绘制比任何其他渲染活动花费的时间都要多")]),this._v(" "),t("p",[this._v("绘制是填充像素的过程，经常是渲染流程中开销最大的部分。坚持使用合成器属性并避免一起绘制，会极大的改进性能。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"分析网络性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析网络性能","aria-hidden":"true"}},[this._v("#")]),this._v(" 分析网络性能")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("移动脚本到body元素的后面，标记async阻止同步加载")])]),this._v(" "),t("li",[t("p",[this._v("将logo改成svg减小体积")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"queued-or-stalled-requests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queued-or-stalled-requests","aria-hidden":"true"}},[this._v("#")]),this._v(" Queued or stalled requests")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"导致原因可能包括"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导致原因可能包括","aria-hidden":"true"}},[this._v("#")]),this._v(" 导致原因可能包括")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"解决方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决方式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("在HTTP1.0/HTTP1.1，实现域名分片")]),this._v(" "),t("li",[this._v("在HTTP2.0，不要使用域名分片")]),this._v(" "),t("li",[this._v("移除或者defer不必要的请求，让必要的请求更快下载")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"slow-time-to-first-byte-ttfb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slow-time-to-first-byte-ttfb","aria-hidden":"true"}},[this._v("#")]),this._v(" Slow Time To First Byte(TTFB)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"导致原因可能包括-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导致原因可能包括-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 导致原因可能包括")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("在客户端和服务器之间的链接很慢")]),this._v(" "),t("li",[this._v("服务器响应速度慢。可以通过在服务器本地请求，以确定是连接慢还是服务器本身慢。如果本地服务器还是得到slow TTFB，说明是服务慢。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"解决方式-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方式-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决方式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("如果是连接慢，可以将内容放在CDN或者改变主机服务商")]),this._v(" "),t("li",[this._v("如果是服务慢，应当优化数据查询，实现数据缓存，或者修改服务配置")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"slow-content-download"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slow-content-download","aria-hidden":"true"}},[this._v("#")]),this._v(" Slow content download")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"导致原因可能包括-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导致原因可能包括-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 导致原因可能包括")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("在客户端和服务器之间的链接很慢")]),this._v(" "),t("li",[this._v("有大量的内容要下载")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"解决方式-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方式-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决方式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("可以将内容放在CDN或者改变主机服务商")]),this._v(" "),t("li",[this._v("优化请求使发送的字节数减小")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"network-panel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#network-panel","aria-hidden":"true"}},[this._v("#")]),this._v(" Network Panel")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"filter-requests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter-requests","aria-hidden":"true"}},[this._v("#")]),this._v(" Filter requests")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/network-filter.jpg",alt:"network-filter"}})])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("domain 只展示来自特殊域名的资源。可以利用通配符(*)来包括多个域名。")]),e._v(" "),r("li",[e._v("has-response-header 展示包括特殊HTTP响应头的资源")]),e._v(" "),r("li",[e._v("is 用is: running查询WebSocket资源")]),e._v(" "),r("li",[e._v("larger-than 展示资源大小大于指定体积的资源")]),e._v(" "),r("li",[e._v("method 展示指定HTTP method type的资源")]),e._v(" "),r("li",[e._v("mime-type 展示特殊MIME type的资源")]),e._v(" "),r("li",[e._v("mixed-content 展示所有mixed content资源(mixed-content: all) 或(mixed-content:displayed)")]),e._v(" "),r("li",[e._v("scheme 展示http资源(scheme: http)或https资源(scheme: https)")]),e._v(" "),r("li",[e._v("set-cookie-domain 展示有匹配特殊值的Domain属性"),r("code",[e._v("Set-cookie")]),e._v("头部的资源")]),e._v(" "),r("li",[e._v("set-cookie-name 展示有匹配特殊性的name属性"),r("code",[e._v("Set-cookie")]),e._v("头部的资源")]),e._v(" "),r("li",[e._v("set-cookie-value 展示有匹配特殊性的value属性"),r("code",[e._v("Set-cookie")]),e._v("头部的资源")]),e._v(" "),r("li",[e._v("status-code 展示匹配了指定HTTP status code的资源")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"view-initiators-and-dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#view-initiators-and-dependencies","aria-hidden":"true"}},[this._v("#")]),this._v(" view initiators and dependencies")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以通过点击"),t("code",[this._v("Shift")]),this._v("，将鼠标移至request上。devtools 发起资源为绿色，依赖资源为红色")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/network-hover-1.jpg",alt:"network-hover-1"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/network-hover-2.jpg",alt:"network-hover-2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"分析内存问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析内存问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 分析内存问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("影响页面性能的内存问题，包括"),t("strong",[this._v("内存泄漏、内存膨胀和频繁的垃圾回收")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("用任务管理器了解页面当前正在使用的内存使用")]),this._v(" "),t("li",[this._v("使用Timeline记录可视化一段时间内的内存使用")]),this._v(" "),t("li",[this._v("使用堆快照确定已分离的DOM数的内存泄漏(内存泄漏的常见原因)")]),this._v(" "),t("li",[this._v("使用分配时间线记录了解新内存在JS堆中的分配时间")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("页面的性能随着时间的延长越来越差。这可能是"),r("strong",[e._v("内存泄漏")]),e._v("的原因。内存泄漏是指页面中的错误导致页面随着时间的延长使用的内存越来越多。当程序持续无法释放其使用的临时内存时就会发生")]),e._v(" "),r("li",[e._v("页面的性能一直很糟糕。这可能是"),r("strong",[e._v("内存膨胀")]),e._v("的原因。内存膨胀是指页面为达到最佳速度而使用的内存比本应使用功能的内存多。内存膨胀不存在硬性数字，不同设备和浏览器具有不同的能力。在高端智能手机上流畅运行的相同页面在低端智能手机上则可能崩溃")]),e._v(" "),r("li",[e._v("页面出现延迟或者经常暂停。这可能是"),r("strong",[e._v("频繁垃圾回收")]),e._v("的原因。垃圾回收是指浏览器收回内存。浏览器决定何时进行垃圾回收。回收期间，所有脚本执行都将暂停。所以，如果浏览器经常进行垃圾回收，脚本执行就会被频繁暂停")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"内存分析常用术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存分析常用术语","aria-hidden":"true"}},[this._v("#")]),this._v(" 内存分析常用术语")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"对象大小"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象大小","aria-hidden":"true"}},[this._v("#")]),this._v(" 对象大小")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/memory101-1.jpg",alt:"memory101-1"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("直接通过对象自身占用")]),this._v(" "),t("li",[this._v("通过保持对其他对象的引用隐式占用，这种方式可以"),t("strong",[this._v("阻止这些对象被垃圾回收器（GC）自动处置")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("当使用Devtools中的堆分析仪（在Memory面板下）时，有两项是："),t("strong",[this._v("直接占用内存")]),this._v("（Shallow Size）和"),t("strong",[this._v("占用总内存")]),this._v("（Retained Size）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/profile2.jpg",alt:"profile2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h5",{attrs:{id:"浅层大小（shallow-size，直接占用内存，不包括引用的对象占用的内存）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浅层大小（shallow-size，直接占用内存，不包括引用的对象占用的内存）","aria-hidden":"true"}},[this._v("#")]),this._v(" 浅层大小（Shallow Size，直接占用内存，"),t("strong",[this._v("不包括引用的对象占用的内存")]),this._v("）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("通常，只有"),t("strong",[this._v("数组和字符串")]),this._v("会有明显的浅层大小。不过，"),t("strong",[this._v("字符串和外部数组的主存储一般位于渲染器内存中，仅将一个小包装器对象置于Javascript堆上")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h5",{attrs:{id:"保留大小（retained-size，占用总内存，包括引用的对象所占用的内存）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保留大小（retained-size，占用总内存，包括引用的对象所占用的内存）","aria-hidden":"true"}},[this._v("#")]),this._v(" 保留大小（Retained Size，占用总内存，"),t("strong",[this._v("包括引用的对象所占用的内存")]),this._v("）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("将对象本身连同其无法从"),t("strong",[this._v("GC根")]),this._v("到达的相关对象一起删除后释放的内存大小")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("GC根")]),this._v("由句柄（handles，控制器）组成，这些句柄（控制器）（不论是局部还是全局）是在建立由build-in函数（native code）到V8外部的Javascript对象的引用时创建。所有此类句柄（控制器）都可以在**GC roots（GC根）>Handle scope（句柄作用域）"),t("strong",[this._v("和")]),this._v("GC根>Global scope（全局句柄）**下的堆快照内找到。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Window全局对象(位于每个iframe中)。堆快照中有一个distance(距离)字段，表示从window对象到达对应对象的最短保留路径长度")]),this._v(" "),t("li",[this._v("文档DOM树，由可以通过遍历文档到达的所有原生DOM节点组成。并不是所有的节点都有JS包装器（引用），不过，如果有包装器（引用）的节点在document存在的情况下都会被保留")]),this._v(" "),t("li",[this._v("有很多对象可能是在调试代码时或者Devtools console中创建出来的")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("内存图从根开始，根可以是浏览器的"),t("code",[this._v("window")]),this._v("对象或"),t("code",[this._v("Node.js")]),this._v("模块的"),t("code",[this._v("Global")]),this._v("对象。这些对象如何被内存回收不受用户的控制")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/memory101-2.jpg",alt:"memory101-2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("浅层大小和保留大小列均以字节为单位表示数据")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"对象保留树（对象的占用总内存树）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象保留树（对象的占用总内存树）","aria-hidden":"true"}},[this._v("#")]),this._v(" 对象保留树（对象的占用总内存树）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("节点（Nodes）（或对象）使用构造函数（用于构建节点）的名称进行标记")]),this._v(" "),t("li",[this._v("边缘使用属性的名称进行标记")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/profile3.jpg",alt:"profile3"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"支配对象（dominators）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支配对象（dominators）","aria-hidden":"true"}},[this._v("#")]),this._v(" 支配对象（Dominators）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/dominator.jpg",alt:"dominator"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"v8详细信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8详细信息","aria-hidden":"true"}},[this._v("#")]),this._v(" V8详细信息")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("数字（如3.14159...）")]),this._v(" "),t("li",[this._v("布尔值（true或false）")]),this._v(" "),t("li",[this._v("字符串")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("它们无法引用其他值，并且始终是叶或终止节点")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("中间31位整型值（称为小整型（SMI））")]),this._v(" "),t("li",[this._v("堆对象，作为堆数字引用。堆数字用于存储不适合SMI格式的值，如双精度数（doubles），或者在需要将值“包装”起来时使用")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("VM堆中")]),this._v(" "),t("li",[this._v("渲染器内存中（外部）。将创建一个包装器对象（引用）并用于访问外部存储空间")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("**原生对象（本地对象）**是Javascript堆之外的任何对象。与堆对象相反，"),t("strong",[this._v("原生对象在生命周期内不由V8垃圾回收器管理，并且只能使用其Javascript包装器对象从Javascript访问")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("命名属性")]),this._v(" "),t("li",[this._v("数字元素")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("映射（Map）")]),this._v(" 用于说明对象类型和它的结构的对象")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"对象组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象组","aria-hidden":"true"}},[this._v("#")]),this._v(" 对象组")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"用任务管理器了解页面当前正在使用的内存使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用任务管理器了解页面当前正在使用的内存使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 用任务管理器了解页面当前正在使用的内存使用")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/memory.jpg",alt:"memory"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("内存占用列 表示原生内存。DOM节点存储在原生内存中。如果此值正在增大，则说明正在创建DOM节点")]),this._v(" "),t("li",[this._v("Javascript使用的内存列 表示JS堆。此列包含两个值。括号中的数字表示实时数字，实时数字表示页面上的可到达对象正在使用的内存量。如果此数字在增大，要么是正在创建新对象，要么是现有对象正在增长")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"使用timeline记录可视化一段时间内的内存使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用timeline记录可视化一段时间内的内存使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用Timeline记录可视化一段时间内的内存使用")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/memory2.jpg",alt:"memory2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var x = [];\n\nfunction grow() {\n  for (var i = 0; i < 10000; i++) {\n    document.body.appendChild(document.createElement('div'));\n  }\n  x.push(new Array(1000000).join('x'));\n}\n\ndocument.getElementById('grow').addEventListener('click', grow);\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("每次按代码中引用的按钮时，将向文档正文附加1万个"),t("code",[this._v("div")]),this._v("节点，并将一个由100万个"),t("code",[this._v("x")]),this._v("字符组成的字符串推送到"),t("code",[this._v("x")]),this._v("数组中。运行此代码会生成一个类似于以下Timeline记录：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/memory3.jpg",alt:"memory3"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("节点计数以离散步长方式增大。 假定节点计数的每次增大都是对 "),t("code",[this._v("grow()")]),this._v(" 的一次调用。 JS 堆图表（蓝色图表）的显示并不直接。为了符合最佳做法，第一次下降实际上是一次强制垃圾回收（通过按 "),t("strong",[this._v("Collect garbage")]),this._v(" 按钮实现）。随着记录的进行，会看到 JS 堆大小高低交错变化。每次点击按钮，JavaScript 代码都会创建 DOM 节点，在创建由 100 万个字符组成的字符串期间，代码会完成大量工作。这里的关键是，JS 堆在结束时会比开始时大（这里“开始”是指强制垃圾回收后的时间点）。"),t("strong",[this._v("在实际使用过程中，如果看到这种 JS 堆大小或节点大小不断增大的模式，则可能存在内存泄漏。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"使用堆快照确定已分离的dom数的内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用堆快照确定已分离的dom数的内存泄漏","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用堆快照确定已分离的DOM数的内存泄漏")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("只有页面的DOM树或Javascript代码不再引用DOM节点时，DOM节点才会被作为垃圾进行回收。如果某个节点已从DOM树移除，但某些Javascript仍然引用它，称节点为“已分离”。"),t("strong",[this._v("已分离的DOM节点时内存泄漏的常见原因")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var detachedNodes;\n\nfunction create() {\n  var ul = document.createElement('ul');\n  for (var i = 0; i < 10; i++) {\n    var li = document.createElement('li');\n    ul.appendChild(li);\n  }\n  detachedTree = ul;\n}\n\ndocument.getElementById('create').addEventListener('click', create);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("堆快照是确定已分离节点的一种方式")]),this._v("。堆快照可以显示拍摄快照时内存在页面的JS对象和DOM节点间的分配")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在Class filter文本框中键入"),t("code",[this._v("Detached")]),this._v("，搜索已分离的DOM树")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/profile.jpg",alt:"profile"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"切换快照视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换快照视图","aria-hidden":"true"}},[this._v("#")]),this._v(" 切换快照视图")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/profile4.jpg",alt:"profile4"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Summary(概要) - 通过构造函数名分类显示对象")]),this._v(" "),t("li",[this._v("Containment(控制) - 可用来探测堆内容")]),this._v(" "),t("li",[this._v("Statistics")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h5",{attrs:{id:"summary-view-概要视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#summary-view-概要视图","aria-hidden":"true"}},[this._v("#")]),this._v(" Summary view(概要视图)")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Constructor(构造函数)表示所有通过该构造函数生成的对象")]),e._v(" "),r("li",[e._v("Distance 显示的是对象到达GC根的最短距离")]),e._v(" "),r("li",[e._v("Objects Count 显示对象的实例数")]),e._v(" "),r("li",[e._v("Shallow size 显示由对应构造函数生成的对象的直接占用内存（浅层大小）总数")]),e._v(" "),r("li",[e._v("Retained size 显示对应对象所占用的最大内存")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h5",{attrs:{id:"containment-view-控制视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#containment-view-控制视图","aria-hidden":"true"}},[this._v("#")]),this._v(" Containment view(控制视图)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("DOMWindow对象-这些对象是Javascript代码的“全局”对象")]),this._v(" "),t("li",[this._v("GC根-VM的垃圾回收器真正的GC根")]),this._v(" "),t("li",[this._v("Native对象-浏览器对象对“推入”Javascript虚拟机中来进行自动操作，如：DOM节点，CSS规则")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("给函数命名在快照中的闭包函数间做出区分会非常有帮助")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 不建议\nfunction createLargeClosure() {\n  var largeStr = new Array(1000000).join('x');\n \n  var lC = function() { // this is NOT a named function\n    return largeStr;\n  };\n \n  return lC;\n}\n// 建议\nfunction createLargeClosure() {\n  var largeStr = new Array(1000000).join('x');\n \n  var lC = function lC() { // this IS a named function\n    return largeStr;\n  };\n \n  return lC;\n}\n")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"发现频繁的垃圾回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发现频繁的垃圾回收","aria-hidden":"true"}},[this._v("#")]),this._v(" 发现频繁的垃圾回收")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"set-up-a-workspace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-up-a-workspace","aria-hidden":"true"}},[this._v("#")]),this._v(" Set up a Workspace")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/workspace.jpg",alt:"workspace"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/workspace2.jpg",alt:"workspace2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"save-a-css-change-to-disk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#save-a-css-change-to-disk","aria-hidden":"true"}},[this._v("#")]),this._v(" Save a CSS change to disk")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/workspace3.jpg",alt:"workspace3"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/workspace4.jpg",alt:"workspace4"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"save-an-html-change-to-disk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#save-an-html-change-to-disk","aria-hidden":"true"}},[this._v("#")]),this._v(" Save an HTML change to disk")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("元素面板上的节点树代表页面的DOM")]),e._v(" "),r("li",[e._v("展示页面，浏览器从网络中抓取到HTML，转换HTML为DOM节点树")]),e._v(" "),r("li",[e._v("如果页面中有Javascript，Javascript可能添加，删除或者改变Dom节点。CSS一样可以改变DOM")]),e._v(" "),r("li",[e._v("浏览器最终使用DOM确定它应该向浏览器用户显示什么内容")]),e._v(" "),r("li",[e._v("因此，网页的最终状态可能和抓取下来的HTML是不同的")]),e._v(" "),r("li",[e._v("这使得DevTools很难解决在元素面板中所做的更改应该保存在何处，因为DOM受HTML、JavaScript和CSS的影响。")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("点击Sources tab > Page")]),e._v(" "),r("li",[e._v("代替要改变的元素")]),e._v(" "),r("li",[e._v("点击保存")]),e._v(" "),r("li",[e._v("重新加载网页，改变的元素将展示出来")]),e._v(" "),r("li",[e._v("打开~/Desktop/app/index.html。改变的元素也保存")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"save-a-javascript-change-to-disk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#save-a-javascript-change-to-disk","aria-hidden":"true"}},[this._v("#")]),this._v(" Save a Javascript change to disk")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("打开 Elements tab")]),this._v(" "),t("li",[this._v("用Command Menu > 输入QS。展示Quick Source")]),this._v(" "),t("li",[this._v("通过Quick Source添加代码到script.js中")]),this._v(" "),t("li",[this._v("点击保存，重新加载页面，网页将发生变化")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"调试progressive-web-app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试progressive-web-app","aria-hidden":"true"}},[this._v("#")]),this._v(" 调试Progressive Web App")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("使用Manifest窗格检查网络应用清单")]),this._v(" "),t("li",[this._v("使用Service Worker窗格执行与服务工作线程相关的全部任务，例如注销或更新服务、模拟推送事件、切换为离线状态，或者停止服务工作线程")]),this._v(" "),t("li",[this._v("从Cache Storage窗格查看服务工作线程缓存")]),this._v(" "),t("li",[this._v("从Clear Storage窗格中点击一次按钮，注销服务工作线程并清除所有存储于缓存")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"网络应用清单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络应用清单","aria-hidden":"true"}},[this._v("#")]),this._v(" 网络应用清单")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("要查看清单来源，点击App Manifest标签下方的链接")]),this._v(" "),t("li",[this._v("按Add to homescreen按钮模拟Add to Homescreen事件")]),this._v(" "),t("li",[this._v("Identity和Presentation部分以一种对用户更加友好的方式显示清单来源中的字段")]),this._v(" "),t("li",[this._v("Icons部分显示了已指定的每个图标")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"服务工作线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务工作线程","aria-hidden":"true"}},[this._v("#")]),this._v(" 服务工作线程")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Offline复选框 切换至离线模式。等同于Network窗格中的离线模式")]),e._v(" "),r("li",[e._v("Update on reload 复选框 可以强制服务工作线程在每次页面加载时更新")]),e._v(" "),r("li",[e._v("Bypass for network 复选框 可以绕过服务工作线程并强制浏览器转至网络寻找请求的资源")]),e._v(" "),r("li",[e._v("Update 按钮 对指定的服务工作线程执行一次性更新")]),e._v(" "),r("li",[e._v("Push 按钮 在没有负载的情况下模拟推送通知")]),e._v(" "),r("li",[e._v("Sync 按钮 模拟后台同步事件")]),e._v(" "),r("li",[e._v("Unregister 按钮 注销指定的服务工作线程")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"服务工作线程缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务工作线程缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 服务工作线程缓存")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"清除存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除存储","aria-hidden":"true"}},[this._v("#")]),this._v(" 清除存储")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"检查和管理存储、数据库与缓存、检查和删除cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查和管理存储、数据库与缓存、检查和删除cookie","aria-hidden":"true"}},[this._v("#")]),this._v(" 检查和管理存储、数据库与缓存、检查和删除Cookie")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("查看和修改本地存储与会话存储")]),e._v(" "),r("li",[e._v("检查和修改IndexdDB数据库")]),e._v(" "),r("li",[e._v("对Web SQL数据库执行语句")]),e._v(" "),r("li",[e._v("查看应用缓存和服务工作线程缓存")]),e._v(" "),r("li",[e._v("点击一次按钮即可清清除所有存储、数据库、缓存和服务工作线程")]),e._v(" "),r("li",[e._v("查看与Cookie有关的详细信息，例如名称、值、网域和大小，等等")]),e._v(" "),r("li",[e._v("删除单个Cookie，选定网域的Cookie或所有网域的全部Cookie")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"常见快捷键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见快捷键","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见快捷键")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"访问devtools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问devtools","aria-hidden":"true"}},[this._v("#")]),this._v(" 访问Devtools")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",[r("thead",[r("tr",[r("th",[e._v("访问DevTools")]),e._v(" "),r("th",[e._v("在Windows上")]),e._v(" "),r("th",[e._v("在Mac上")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("打开Developer Tools")]),e._v(" "),r("td",[e._v("F12、Ctrl+Shift+I")]),e._v(" "),r("td",[e._v("Cmd+Opt+I")])]),e._v(" "),r("tr",[r("td",[e._v("打开/切换检查元素模式和浏览器窗口")]),e._v(" "),r("td",[e._v("Ctrl+Shift+C")]),e._v(" "),r("td",[e._v("Cmd+Opt+C")])]),e._v(" "),r("tr",[r("td",[e._v("打开Developer Tools并聚焦到控制台")]),e._v(" "),r("td",[e._v("Ctrl+Shift+J")]),e._v(" "),r("td",[e._v("Cmd+Opt+J")])]),e._v(" "),r("tr",[r("td",[e._v("检查检查器（取消停靠第一个后按）")]),e._v(" "),r("td",[e._v("Ctrl+Shift+I")]),e._v(" "),r("td",[e._v("Cmd+Opt+I")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"lighthouse-audits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lighthouse-audits","aria-hidden":"true"}},[this._v("#")]),this._v(" lighthouse--Audits")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Audits 从Performance、PWA、Accessibility、Best Practices、SEO五个维度分析性能")]),this._v(" "),t("li",[this._v("Coverage 用来分析在初始加载时每个脚本执行的覆盖度，可以分析出哪些脚本能用async或defer方式加载")]),this._v(" "),t("li",[this._v("Request Blocking 用来阻塞用户自己指定目录下的脚本，若还能正常运行，说明这些脚本压根没有在初始加载中执行")]),this._v(" "),t("li",[this._v("Performance 可以通过User Timing API分析出哪些方法是耗时的方法，做出性能上的优化；Bottom Up 中显示了选中的方法以下的时间占比，更好的看执行时间")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Performance")]),e._v(" "),r("li",[e._v("Progressive Web App")]),e._v(" "),r("li",[e._v("Accessibility")]),e._v(" "),r("li",[e._v("Best Practices")]),e._v(" "),r("li",[e._v("SEO")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"performance（24）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#performance（24）","aria-hidden":"true"}},[this._v("#")]),this._v(" Performance（24）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("优化关键渲染路径")]),this._v("指优先显示与当前用户操作有关的内容。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Initial navigation\n|---lighthouse/ (developers.google.com)\n    |---/css (fonts.googleapis.com) - 1058.34ms, 72.80KB\n    |---css/devsite-googler-buttons.css (developers.google.com) - 1147.25ms, 70.77KB\n    |---jsi18n/ (developers.google.com) - 1155.12ms, 71.20KB\n    |---css/devsite-google-blue.css (developers.google.com) - 2034.57ms, 85.83KB\n    |---2.2.0/jquery.min.js (ajax.googleapis.com) - 2699.55ms, 99.92KB\n    |---contributors/kaycebasques.jpg (developers.google.com) - 2841.54ms, 84.74KB\n    |---MC30SXJEli4/photo.jpg (lh3.googleusercontent.com) - 3200.39ms, 73.59KB\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以根据以下方式"),t("strong",[this._v("提升CRP")]),this._v("：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("将关键资源数降至最低：消除关键资源、延迟关键资源的下载并将它们标记为不同步等")]),this._v(" "),t("li",[this._v("优化关键字节数以缩短下载时间（往返次数）")]),this._v(" "),t("li",[this._v("优化其余关键资源的加载顺序：今早下载所有关键资产，以缩短关键路径长度")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("检测关键CSS。用来加载页面必备的CSS称为关键CSS，一个页面的加载只能被关键CSS阻塞。可以使用Chrome devtools的Coverage页签帮助检测关键CSS和非关键CSS")]),this._v(" "),t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/coverage.png",alt:"coverage"}})])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("浏览器和服务器如何协商文本压缩")]),this._v(" "),t("p",[this._v("当浏览器发出请求资源，它在accept-encoding请求头中列出了它支持的文本压缩编码。服务器从浏览器支持的格式中挑选一个响应，在content-encoding响应头中加以阐述")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("用Chrome Devtools检查响应是否压缩")]),this._v(" "),t("p",[this._v("可以通过Network>Headers页签>Response Headers>content-heading检查是否压缩")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/render-pipeline.jpg",alt:"render-pipeline"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Javascript。一般来说，会使用Javascript来实现一些视觉变化的效果。比如用jQuery的animate函数做一个动画、对一个数据集进行排序或者往页面里添加一些DOM元素等。当然，除了Javascript，还有其他一些常用方法可以实现视觉变化效果，比如：CSS Animation、Transitions和Web Animation API")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("样式计算。此过程是根据匹配选择器计算出哪些元素应用哪些CSS规则的过程。从中知道规则之后，将应用规则并计算每个元素的最终样式")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("布局。在知道对一个元素应用哪些规则之后，浏览器即可开始计算它要占据的空间大小及其在屏幕的位置。网页的布局模式意味着一个元素可能影响其他元素，如")]),t("body",[this._v("元素的宽度一般会影响其子元素的宽度以及树中各处的节点"),t("p")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[r("p",[e._v("JS/CSS>样式>布局>绘制>合成")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/render-pipeline.jpg",alt:"render-pipeline"}})]),e._v(" "),r("p",[e._v('如果修改元素的"layout"属性，也就是改变元素的几何属性（如宽度、高度、左侧或顶部位置等），浏览器将必须检查所有其他元素，然后"自动重排"页面。任何受影响的部分都需要重新绘制，而且最终绘制的元素需进行合成')])]),e._v(" "),r("li",[r("p",[e._v("JS/CSS>样式>绘制>合成")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/render-pipeline2.jpg",alt:"render-pipeline2"}})]),e._v(" "),r("p",[e._v('如果修改"Paint only"属性（如背景图片、文字颜色或阴影等），即不会影响页面布局的属性，则浏览器会跳过布局，但仍将执行绘制')])]),e._v(" "),r("li",[r("p",[e._v("JS/CSS>样式>合成")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/render-pipeline3.jpg",alt:"render-pipeline3"}})]),e._v(" "),r("p",[e._v("如果更改一个既不要布局也不要绘制的属性，则浏览器将跳到只执行合成")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("合成。由于页面的各部分可能被绘制到多层，由此它们需要按正确顺序绘制到屏幕上，以便正确渲染页面。对于与另一元素重叠的元素来说，一个错误可能使一个元素错误地出现在另一个元素的上层")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("CSS")]),this._v("：通过媒体类型和媒体查询将一些CSS资源标记为不阻塞渲染，但"),t("strong",[this._v("无论是阻塞还是不阻塞，浏览器都会下载所有CSS资源，只是不阻塞渲染的资源优先级较低罢了")]),this._v("。例如：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<link href="style.css" rel="stylesheet">\n<link href="print.css" rel="stylesheet" media="print">\n<link href="other.css" rel="stylesheet" media="(min-width: 40em)">\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("JS")]),this._v("：加载第三方Javascript")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/origin-breakdown.jpg",alt:"origin-breakdown"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("用Network 面板测量页面加载需要多长时间。最好采用模拟真实情况的方式，通过转换network throttling和CPU throttling。")]),this._v(" "),t("li",[this._v("阻塞一些你认为会有影响的第三方脚本的URLs和域名")]),this._v(" "),t("li",[this._v("重新加载页面，重新测量不加载这些第三方脚本的时长")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("用WebPageTest测量第三方标签的影响")]),this._v('：WebPageTest支持阻塞加载请求来测量第三方脚本带来的影响。在"Advanced Settings"下有一个Block页签。可以标识需要阻塞的域名列表，模拟不加载它们将会如何')])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/webpagetest.jpg",alt:"webpagetest"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("如何有效的加载第三方脚本？")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("利用async或defer属性加载脚本改善性能")]),e._v(" "),r("p",[e._v("async：浏览器异步下载脚本，同时解析HTML文档。"),r("strong",[e._v("当脚本下载完成，中断解析转由执行脚本")])]),e._v(" "),r("p",[e._v("defer：浏览器异步下载脚本，同时解析HTML文档。"),r("strong",[e._v("直到解析完成，才开始执行脚本")])]),e._v(" "),r("p",[r("img",{attrs:{src:"http://reyshieh.com/assets/defer-async.jpg",alt:"defer-async"}})]),e._v(" "),r("p",[e._v("总的来说，除非脚本在关键渲染路径(critical rendering path, CRP)中必须存在，否则，都应该使用async或者defer来加载第三方脚本")]),e._v(" "),r("ul",[r("li",[e._v("利用"),r("code",[e._v("async")]),e._v("加载在进程中需要更早执行的脚本，例如包括一些分析脚本(analytics scripts)")]),e._v(" "),r("li",[e._v("利用"),r("code",[e._v("defer")]),e._v("加载非关键资源，如video播放器")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("如果脚本对站点并没有产生影响，考虑移除脚本")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("考虑资源提示(resource hints)如"),r("code",[e._v("<link rel=preconnect>")]),e._v("或"),r("code",[e._v("<link rel=dns-prefetch>")]),e._v("来为托管第三方脚本的域执行DNS查找")]),e._v(" "),r("p",[e._v("在慢网络等下，为第三方域建立连接会花费大量的时间。包括了很多步骤：DNS查询，重定向，可能需要多次往返于每个第三方服务器以处理请求。")]),e._v(" "),r("p",[e._v("使用托管第三方脚本的域，当最终请求发出时，由于DNS查询已经查找，将会节省这些时间")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('<link rel="dns-prefetch" href="http://example.com">\n')])])]),r("p",[e._v("如果使用的相关域使用了HTTPS，就得考虑执行DNS查询，解决TCP传输和处理TLS协商。再加上SSL证书的认证，会使这些步骤都变得很慢，可以考虑使用资源提示减少建立连接的费时")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('<link rel="preconnect" href="https://cdn.example.com">\n')])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("应该避免使用第三方脚本的哪些模式？")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[this._v("避免"),t("code",[this._v("document.write()")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("缓解策略")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("必要的HTTPS。尤其是当主域是HTTPS时，第三方脚本不能是HTTP。这样会带来混合内容的警告")]),this._v(" "),t("li",[this._v('考虑在iframes上使用"沙盒属性"。从安全的观点出发，这允许限制从iframe中可用的操作。可以通过设置'),t("code",[this._v("allow-scripts")]),this._v("来控制是否可以运行脚本")]),this._v(" "),t("li",[this._v("考虑Content Security Policy(CSP)。CSP可以检测和减小外来攻击的影响，如XSS")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("使用HTTP 缓存加速重复访问")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("压缩文本，加快下载时间")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://reyshieh.com/assets/javascript-vs-image.jpg",alt:"javascript-vs-image"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("6.First Interactive(首次交互)")]),this._v(" "),t("p",[this._v("推荐处理方式：")]),this._v(" "),t("ul",[t("li",[this._v("最小化页面加载之前必须下载或执行的必要或“关键”资源的数量")]),this._v(" "),t("li",[this._v("最小化每个关键资源的大小")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("7.First Meaningful Paint(首次有效绘制)")]),this._v(" "),t("p",[this._v("首次有效绘制分数越低，页面显示其主要内容的速度就越快")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("8.Avoids Enormous Network Payloads")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[e._v("延迟加载没有必要的请求")]),e._v(" "),r("li",[e._v("尽可能减小优化请求，包括以下一些技术：\n"),r("ul",[r("li",[e._v("使文本压缩")]),e._v(" "),r("li",[e._v("缩小HTML，JS和CSS")]),e._v(" "),r("li",[e._v("利用WebP代替JPEG或PNG")]),e._v(" "),r("li",[e._v("设置JPEG的压缩级别到85")])])]),e._v(" "),r("li",[e._v("缓存请求，使页面不重新下载已经访问过的资源")])]),e._v(" "),r("p",[e._v("Lighthouse将合计页面请求中所有资源的总字节数")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("9.Has multiple page redirects")]),this._v(" "),t("p",[this._v("重定向将减慢页面加载速度")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("10.JavaScript Bootup Time Is Too High")]),e._v(" "),r("p",[e._v("Javascript会在很多方面减慢页面：")]),e._v(" "),r("ul",[r("li",[e._v("网络花销")]),e._v(" "),r("li",[e._v("解析和编译花销。Javascript会在主线程中解析和编译。当主线程忙碌时，页面不会响应用户输入")]),e._v(" "),r("li",[e._v("执行花销。如果页面在真正需要之前运行了大量代码，那么这也会延迟您进行交互的时间，这是与用户如何感知页面速度相关的关键指标之一")]),e._v(" "),r("li",[e._v("内存花销")])]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("传输规模对低端网络至关重要；解析时间对中央处理器受限设备(CPU-bound devices)非常重要")]),e._v(" "),r("ul",[r("li",[e._v("只传输对用户需要的代码")]),e._v(" "),r("li",[e._v("缩小代码")]),e._v(" "),r("li",[e._v("压缩代码")]),e._v(" "),r("li",[e._v("移除没必要的代码")]),e._v(" "),r("li",[e._v("缓存代码来减小网络传输")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("11.Keep Server Response Times Low")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[e._v("优化服务应用逻辑。如果利用服务框架，框架会有推荐处理怎么做")]),e._v(" "),r("li",[e._v("优化服务器查询数据库或迁移到更快的数据库系统的方式")]),e._v(" "),r("li",[e._v("更新服务硬件来提升内存和CPU")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("12.Minify CSS")]),e._v(" "),r("p",[e._v("缩小CSS文件改善页面加载性能")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// bad\n/* Header background should match brand colors. */\nh1 {\n  background-color: #000000;\n}\nh2 {\n  background-color: #000000;\n}\n// good\nh1, h2 { background-color: #000000; }\n")])])]),r("p",[e._v("更大的减少是通过移除空格，缩小表达方式，如#000000 -> #000  0px -> 0")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("h1,h2{background-color:#000000;}\n")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("14.Optimize Images")]),this._v(" "),t("p",[this._v("推荐处理方式：")]),this._v(" "),t("p",[this._v("设置每张图片压缩等级到85或更低")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("提供大小合适的图像的主要策略被称为“响应式图像”。通过产生多个版本的图片，可以在HTML或CSS中使用媒体查询，视窗尺寸等来区分版本")]),this._v(" "),t("li",[this._v("另一种方式可以使用基于矢量的图片格式，如SVG。SVG图片可以按比例放大任何大小")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("17.Preload key requests")]),this._v(" "),t("p",[this._v("推荐处理方式：")]),this._v(" "),t("ul",[t("li",[t("p",[this._v("声明preload链接指示尽可能早地下载关键资源")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<head>\n\t...\n\t<link rel="preload" href="styles.css" as="style" />\n\t<link rel="preload" href="ui.js" as="script" />\n\t...\n</head>\n')])])])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("18.Reduce Render-Blocking Scripts")]),e._v(" "),r("p",[e._v("通过内联首次绘制所需的链接和脚本，并延迟首次绘制不需要的链接和脚本，可以提升页面加载速度")]),e._v(" "),r("p",[e._v("lighthouse列出其检测到的所有阻塞渲染的链接或脚本，目标是减少这些链接或脚本的数量")]),e._v(" "),r("p",[e._v("lighthouse标记三种类型的阻塞渲染的脚本：脚本、样式表和HTML导入")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[e._v("对于关键脚本，考虑在HTML中内联它们。对于非关键脚本，考虑使用async和defer属性标记它们")]),e._v(" "),r("li",[e._v("对于样式表，考虑将样式分成不同的文件，按媒体查询进行组织，然后向每个样式表链接添加一个media属性。在加载页面时，浏览器仅阻止首次绘制以检索与用户的设备匹配的样式表")]),e._v(" "),r("li",[e._v("对于非关键的HTML导入，使用async属性标记它们")])]),e._v(" "),r("p",[e._v("Lighthouse可标识三种类型的阻塞资源")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("<script>")]),e._v("标记，具有以下特征：\n"),r("ul",[r("li",[e._v("位于文档的"),r("code",[e._v("<head>")]),e._v("中")]),e._v(" "),r("li",[e._v("没有defer属性")]),e._v(" "),r("li",[e._v("没有async属性")])])]),e._v(" "),r("li",[r("code",[e._v('<link rel="stylesheet">')]),e._v("标记，具有以下特征:\n"),r("ul",[r("li",[e._v("没有disabled属性")]),e._v(" "),r("li",[e._v("没有雨用户的设备匹配的media属性")])])]),e._v(" "),r("li",[r("code",[e._v('<link rel="import">')]),e._v("标记，具有以下特征：\n"),r("ul",[r("li",[e._v("没有async属性")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("20.Time to Interactive")]),this._v(" "),t("p",[this._v("Lighthouse中该指标的分数越低越好")]),this._v(" "),t("p",[this._v("可交互时间指的是布局已趋于稳定、关键的网络字体可见且主要线程足以处理用户输入的时间点")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("21.Unoptimized Images")]),e._v(" "),r("p",[e._v("存在两种类型的图片：矢量和栅格")]),e._v(" "),r("p",[e._v("对于简单的几何图形，如logo，可以用矢量图，如SVG")]),e._v(" "),r("p",[e._v("对于复杂的图片，如照片，尽可能的使用WebP。但是浏览器支持不普遍，因此决定如何编码图片，也就是何时使用PNG和JPEG")]),e._v(" "),r("p",[e._v("Lighthouse会优化每张图片，然后对比原来的版本和优化后的版本。当审查遇到以下的条件之一，就会失败：")]),e._v(" "),r("ul",[r("li",[e._v("JPEG的质量设置到80，移除metadata，如果图片缩小至少10KB")]),e._v(" "),r("li",[e._v("如果编码成WebP，图片缩小至少100KB")]),e._v(" "),r("li",[e._v("所有图片编码成WebP，节省了1MB")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("22.User Timing Marks and Measures")]),this._v(" "),t("p",[this._v("可以通过User Timing API测量应用的Javascript性能。")]),this._v(" "),t("p",[this._v('这个审查不采用"通过"或"不通过"测试这种结构。')])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("23.Uses An Excessive DOM Size")]),e._v(" "),r("p",[e._v("大量的DOM树会损毁页面性能：")]),e._v(" "),r("ul",[r("li",[e._v("网络效率和负载性能")]),e._v(" "),r("li",[e._v("运行时性能")]),e._v(" "),r("li",[e._v("内存性能")])]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("ul",[r("li",[e._v("总节点少于1500节点")]),e._v(" "),r("li",[e._v("最大深度为32个节点")]),e._v(" "),r("li",[e._v("没有包含超过60个子节点的父节点")])]),e._v(" "),r("p",[e._v("总的来说，最好在需要的时候再创建节点，在不需要的时候就销毁")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("24.Uses inefficient cache policy on static assets")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("配置"),r("code",[e._v("Cache-Control")]),e._v("HTTP响应头")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Cache-Control: max-age=86400\n")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"progressive-web-app（19）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#progressive-web-app（19）","aria-hidden":"true"}},[this._v("#")]),this._v(" Progressive Web App（19）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"accessibility（9）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#accessibility（9）","aria-hidden":"true"}},[this._v("#")]),this._v(" Accessibility（9）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"best-practices-最佳实践-（19）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#best-practices-最佳实践-（19）","aria-hidden":"true"}},[this._v("#")]),this._v(" Best Practices(最佳实践)（19）")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("2.Avoids console.time()")]),e._v(" "),r("p",[e._v("相对于"),r("code",[e._v("console.time()")]),e._v("测试页面性能，"),r("code",[e._v("User Timing API")]),e._v("更具有优势：")]),e._v(" "),r("ul",[r("li",[e._v("高分辨率时间戳")]),e._v(" "),r("li",[e._v("可导出的计时数据")]),e._v(" "),r("li",[e._v("与Chrome Devtools Timeline相集成。在Timeline录制期间调用User Timing 函数"),r("code",[e._v("performance.measure()")]),e._v("时，Devtools自动将测量结果添加到Timeline的结果中")])]),e._v(" "),r("p",[e._v("Lighthouse列出在URLs下找到的console.time()的每个实例。将每个调用替换为"),r("code",[e._v("performance.mark()")]),e._v("。如果要测量在两个标记之间经过的时间，则使用"),r("code",[e._v("performance.measure()")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("3.Avoids Date.now()")]),this._v(" "),t("p",[this._v("考虑使用"),t("code",[this._v("performance.now()")]),this._v("。该函数可提供较高的时间戳分辨率，并始终以恒定的速率增加，它不受系统时钟的影响")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("5.Avoids document.write()")]),this._v(" "),t("p",[this._v("对于网速较慢(如2G、3G或较慢的WLAN)的用户，外部脚本通过"),t("code",[this._v("document.write()")]),this._v("动态注入会使主要页面内容的显示延迟数十秒")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("7.Avoids Old CSS Flexbox")]),e._v(" "),r("p",[e._v("在URLs下，Lighthouse列出它在页面样式表中找到的"),r("code",[e._v("display: box")]),e._v("的每个实例。将每个实例替换为新语法，"),r("code",[e._v("display: flex")])]),e._v(" "),r("p",[e._v("简而言之，以"),r("code",[e._v("box")]),e._v("开头的每个属性(如"),r("code",[e._v("box-flex")]),e._v(")已弃用并且应予以替换")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("8.Avoids Requesting The Geolocation Permission On Page Load")]),this._v(" "),t("p",[this._v("页面在加载时自动请求用户位置会使用户不信任页面或感到困惑。应将此请求与用户的手势进行关联，而不是在页面加载时自动请求用户的位置")]),this._v(" "),t("p",[this._v("在URLs下，Lighthouse报告它在代码中的行号和列号。删除这些调用，将此请求与用户手势进行关联")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("9.Avoids Requesting The Notification Permission On Page Load")]),this._v(" "),t("p",[this._v("如果页面在加载时要求权限以发送通知，这些通知可能与用户无关或者不是他们的精准需求。为提高用户体验，最好是向用户发送特定类型的通知，并在他们选择加入后显示权限请求")]),this._v(" "),t("p",[this._v("在URLs下，Lighthouse报告它在代码中的行号和列号。删除这些调用，将此请求与用户手势进行关联")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("13.Manifest's short_Name Won't Be Truncated When Displayed On Homescreen")]),e._v(" "),r("p",[e._v("在用户将网络应用功能添加到主屏幕时，"),r("code",[e._v("short_name")]),e._v("属性作为标签显示在应用的图标旁。如果"),r("code",[e._v("short_name")]),e._v("超过12个字符，则在主屏幕上显示会被截断")]),e._v(" "),r("p",[e._v("如果"),r("code",[e._v("short_name")]),e._v("不存在，Chrome可以回退到"),r("code",[e._v("name")]),e._v("属性")]),e._v(" "),r("p",[e._v("Lighthouse会提取清单并验证"),r("code",[e._v("short_name")]),e._v("属性是否少于12个字符。如果清单中没有天剑"),r("code",[e._v("short_name")]),e._v("，但是"),r("code",[e._v("name")]),e._v("少于12个字符，审查将会通过")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("当页面链接至使用"),t("code",[this._v('target="_blank"')]),this._v("的另一个页面时，新页面将与原来页面在同一个进程上运行，如果新页面正在执行开销极大的Javascript，此时页面的性能可能会受到影响")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("此外，"),t("code",[this._v('target="_blank"')]),this._v("也是一个安全漏洞。新的页面可以通过"),t("code",[this._v("window.opener")]),this._v("访问窗口对象，并且可以使用"),t("code",[this._v("window.opener.location = newURL")]),this._v("将页面导航至不同的网址")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("将"),t("code",[this._v('rel="noopener"')]),this._v("添加至Lighthouse报告中识别的每个链接上。一般情况下，当在新窗口或标签中打开一个外部链接时，始终添加"),t("code",[this._v('rel="noopener"')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<a href="https://examplepetstore.com" target="_blank" rel="noopener">...</a>\n')])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("li",[r("p",[e._v("15.Prevents Users From Pasting Into Password Fields")]),e._v(" "),r("p",[e._v("密码粘贴提高了安全性，因为它允许用户使用密码管理器。密码管理器通常为用户生成强大的密码，安全地存储它们，然后在用户需要登录时自动将它们粘贴到密码字段中。")]),e._v(" "),r("p",[e._v("推荐处理方式：")]),e._v(" "),r("p",[e._v("删除阻止用户粘贴到密码字段的代码。其中通过监听"),r("code",[e._v("paste")]),e._v("事件，调用"),r("code",[e._v("preventDefault()")]),e._v("可以阻止password输入元素的粘贴行为")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("let input = document.querySelector('input');\ninput.addEventListener('paste', (e) => {\n    e.preventDefault();\n});\n")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("17.Uses HTTPS")]),this._v(" "),t("p",[this._v("所有网站均应使用HTTPS进行保护。HTTPS可防止入侵者篡改或被动地侦听网站和用户之间的通信")]),this._v(" "),t("p",[this._v("一个应用如果不在HTTPS上运行，那么它就不符合成为Progressive Web App的条件")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("18.Uses HTTP/2 For Its Own Resources")]),this._v(" "),t("p",[this._v("HTTP/2可更快地提供页面的资源，并且可减少通过网络传输的数据")]),this._v(" "),t("p",[this._v("在URLs下，Lighthouse列出不是通过HTTP/2提供的每个资源。要通过此审查，需要通过HTTP/2提供其中的每个资源")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在触摸和滚轮事件侦听器上设置"),t("code",[this._v("passive")]),this._v("选项可提升滚动性能")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("将"),r("code",[e._v("passive")]),e._v("标志添加到Lighthouse已识别的所有事件侦听器。一般情况下，将"),r("code",[e._v("passive")]),e._v("标志添加到每个没有调用"),r("code",[e._v("preventDefault()")]),e._v("的"),r("code",[e._v("wheel")]),e._v("、"),r("code",[e._v("mousewheel")]),e._v("、"),r("code",[e._v("touchstart")]),e._v("、"),r("code",[e._v("touchmove")]),e._v("事件侦听器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在支持被动事件侦听器的浏览器中，将侦听器标记为"),t("code",[this._v("passive")]),this._v("与设置标志一样简单:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("document.addEventListener('touchstart', onTouchStart, {passive: true});\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"seo（10）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seo（10）","aria-hidden":"true"}},[this._v("#")]),this._v(" SEO（10）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"console"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#console","aria-hidden":"true"}},[this._v("#")]),this._v(" Console")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"写入控制台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写入控制台","aria-hidden":"true"}},[this._v("#")]),this._v(" 写入控制台")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.log()")]),this._v("方法可以向控制台进行任何基本记录。此方法采用一个或多个表达式作为参数，并将其当前值写入控制台，从而将多个参数级联到一个由空格分割的行中")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.debug()")]),this._v("与"),t("code",[this._v("console.log()")]),this._v("作用相同")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.info()")]),this._v("与"),t("code",[this._v("console.log()")]),this._v('也很相像，只是在输出旁边显示一个图标（带白色"i"的蓝色圆圈）')])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"清空控制台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清空控制台","aria-hidden":"true"}},[this._v("#")]),this._v(" 清空控制台")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.clear()")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"输出javascript形式表示的指定对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出javascript形式表示的指定对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 输出Javascript形式表示的指定对象")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.dir(object)")]),this._v(" 如果正在记录的对象是HTML对象，将输出其以DOM形式表示的属性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("console.dir(document.body);// 等价 console.log('%O', document.body);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"组织控制台输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组织控制台输出","aria-hidden":"true"}},[this._v("#")]),this._v(" 组织控制台输出")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.group()")]),this._v("，可以使用组命令输出组织到一起。采用一个字符串参数设置组名称。在Javascript中调用此命令后，控制台会将所有后续输出都组织在一起。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("结束分组，用命令"),t("code",[this._v("console.groupEnd()")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例\nvar user = "jsmith", authenticated = false;\nconsole.group("Authentication phase");\nconsole.log("Authenticating user \'%s\'", user);\n// authentication code here...\nif (!authenticated) {\n    console.log("User \'%s\' not authenticated.", user)\n}\nconsole.groupEnd();\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"嵌套组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套组","aria-hidden":"true"}},[this._v("#")]),this._v(" 嵌套组")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例\nvar user = "jsmith", authenticated = true, authorized = true;\n// Top-level group\nconsole.group("Authenticating user \'%s\'", user);\nif (authenticated) {\n    console.log("User \'%s\' was authenticated", user);\n    // Start nested group\n    console.group("Authorizing user \'%s\'", user);\n    if (authorized) {\n        console.log("User \'%s\' was authorized.", user);\n    }\n    // End nested group\n    console.groupEnd();\n}\n// End top-level group\nconsole.groupEnd();\nconsole.log("A group-less log trace.");\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"自动折叠组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动折叠组","aria-hidden":"true"}},[this._v("#")]),this._v(" 自动折叠组")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("大量使用组时，为了即使查看所有信息是非常有用的。可以通过调用"),t("code",[this._v("console.groupCollapsed()")]),this._v("自动折叠")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 示例\nconsole.groupCollapsed(\"Authenticating user '%s'\", user);\nif (authenticated) {\n    ...\n}\nconsole.groupEnd();\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"错误和警告"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#错误和警告","aria-hidden":"true"}},[this._v("#")]),this._v(" 错误和警告")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.error()")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.warn()")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"断言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#断言","aria-hidden":"true"}},[this._v("#")]),this._v(" 断言")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.assert()")]),this._v("可以仅在其第一个参数为false时有条件地显示错误字符串（其第二个参数）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例，在不满足第一个条件时，才会打印日志\nconsole.assert(list.childNodes.length < 500, "Node count is > 500");\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"字符串替代和格式设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串替代和格式设置","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符串替代和格式设置")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("table",[r("thead",[r("tr",[r("th",[e._v("说明符")]),e._v(" "),r("th",[e._v("输出")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("%s")]),e._v(" "),r("td",[e._v("将值格式化为字符串")])]),e._v(" "),r("tr",[r("td",[e._v("%i或者%d")]),e._v(" "),r("td",[e._v("将值格式化为整形")])]),e._v(" "),r("tr",[r("td",[e._v("%f")]),e._v(" "),r("td",[e._v("将值格式化为浮点值")])]),e._v(" "),r("tr",[r("td",[e._v("%o")]),e._v(" "),r("td",[e._v("将值格式化为可扩展DOM元素。如同在Elements面板中显示的一样")])]),e._v(" "),r("tr",[r("td",[e._v("%O")]),e._v(" "),r("td",[e._v("将值格式化为可扩展Javascript对象,也可使用console.dir达到同样效果")])]),e._v(" "),r("tr",[r("td",[e._v("%c")]),e._v(" "),r("td",[e._v("将CSS样式规则应用到显示中，作为第二个参数")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('console.log("%cThis will be formatted with large, blue text", "color: blue; font-size: x-large");\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"记录对象数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#记录对象数组","aria-hidden":"true"}},[this._v("#")]),this._v(" 记录对象数组")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以用"),t("code",[this._v("console.table()")]),this._v("命令将数组显示为表格形式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例\nconsole.table([{a:1, b:2, c:3}, {a:"foo", b:false, c:undefined}]);\nconsole.table([[1,2,3], [2,3,4]]);\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"记录特定的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#记录特定的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 记录特定的属性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例\nfunction Person(firstName, lastName, age) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n  this.age = age;\n}\n\nvar family = {};\nfamily.mother = new Person("Susan", "Doyle", 32);\nfamily.father = new Person("John", "Doyle", 33);\nfamily.daughter = new Person("Lily", "Doyle", 5);\nfamily.son = new Person("Mike", "Doyle", 8);\n\nconsole.table(family, ["firstName", "lastName", "age"]);\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"测量执行时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测量执行时间","aria-hidden":"true"}},[this._v("#")]),this._v(" 测量执行时间")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.time()")]),this._v("和"),t("code",[this._v("console.timeEnd()")]),this._v("跟踪代码执行点之间经过的时间")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 示例\nconsole.time("Array initialize");\nvar array= new Array(1000000);\nfor (var i = array.length - 1; i >= 0; i--) {\n    array[i] = new Object();\n};\nconsole.timeEnd("Array initialize");\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.timeStamp()")]),this._v(" 在录制会话期间向"),t("strong",[this._v("Timeline")]),this._v("添加一个事件")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 示例\nconsole.timeStamp('check out this custom timestamp thanks to console.timeStamp()!');\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.count()")]),this._v("对相同字符串传递到函数的次数进行计数。当完全相同的语句被提供给同一行上的count()时，此数字将增大。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 示例\nfunction login(user) {\n    console.count(\"Login called for user \" + user);\n}\n\nusers = [ // by last name since we have too many Pauls.\n    'Irish',\n    'Bakaus',\n    'Kinlan'\n];\n\nusers.forEach(function(element, index, array) {\n    login(element);\n});\n\nlogin(users[0]);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"启动带有可选标签的javascript-cpu配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动带有可选标签的javascript-cpu配置文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动带有可选标签的Javascript CPU配置文件")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.profile()")]),this._v(" 每一个配置文件都会添加到"),t("strong",[this._v("Profiles")]),this._v("面板中")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.profileEnd()")]),this._v("用来完成配置文件，停止当前的Javascript CPU分析会话，并将报告输出到"),t("strong",[this._v("Profiles")]),this._v("面板中")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"堆栈追踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆栈追踪","aria-hidden":"true"}},[this._v("#")]),this._v(" 堆栈追踪")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("console.trace()")]),this._v(" 从调用此方法的位置输出一个堆叠追踪")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function add(num) {\n    if (num > 0) {\n        console.trace('recursion is fun:', num);\n        return num + add(num - 1);\n    } else {\n        return 0;\n    }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"使用window-onerror处理运行时异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用window-onerror处理运行时异常","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用window.onerror处理运行时异常")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以使用"),t("code",[this._v("window.onerror")]),this._v("处理程序函数，每当Javascript代码执行中发生错误时都会调用此函数。当Javascript异常每次在窗口上下文中引发并且未被try/catch块捕捉时，调用此函数时还会调用异常的消息、引发异常的文件的网址、该文件中的行号，三者根据次顺序作为三个参数传递")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('window.onerror = function(message, url, line) {\n    console.log("window.onerror was invoked with message = " + message + ", url = " + url + ", line = " + line);\n}\n')])])])}],!1,null,null,null);i.options.__file="Damn-hole-of-google-devtools.md";t.default=i.exports}}]);