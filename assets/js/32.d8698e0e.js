(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{176:function(e,n,t){"use strict";t.r(n);var s=t(0),a=Object(s.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("p",[e._v("前段花了时间阅读了部分的webpack的源码，意识到webpack对于前端开发的重要性，于是下定决心，以开发一个blog为例，记录我学习webpack打包优化的心得。")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),t("p",[e._v("配置中引用的包如图")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._m(8),e._v(" "),e._m(9),e._m(10),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),t("p",[e._v("在第一版中，使用了变量提升了编译后文件运行速度；使用了happypack、mini-css-extract-plugin、optimize-css-assets-webpack-plugin、webpack-parallel-uglify-plugin提升了编译速度。")]),e._v(" "),e._m(15),e._v(" "),t("p",[e._v("上打包后的体积图")]),e._v(" "),e._m(16),e._v(" "),t("p",[e._v("同时，由于是第一次搭webpack配置，还是碰到几个问题，顺带记录下")]),e._v(" "),t("ol",[t("li",[e._m(17),e._v(" "),t("p",[e._v("原因："),t("a",{attrs:{href:"https://github.com/webpack/webpack/issues/6556",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack升级到4.0后，已经将全局变量全部局部化，获取需要通过LoaderOptionsPlugin的方式定义全局变量才行，而eslint-loader还是采用原来的方式获取全局中的options，因此获取不到"),t("OutboundLink")],1)])]),e._v(" "),e._m(18)]),e._v(" "),e._m(19),e._v(" "),t("p",[e._v("优化第一步，先用webpack-bundle-analyzer或者别的类似的功能插件做分析，第一版的分析结果如下")]),e._v(" "),e._m(20),e._v(" "),t("p",[e._v("WTF，vue居然两边都打包了！先处理这个问题")]),e._v(" "),t("p",[e._v("先把vendor中的vue、vue-router、vuex单独拆开，只是修改了entry的vendor和html-webpack-plugin中的引入模块")]),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),t("p",[e._v("Webpack.dll.config.js")]),e._v(" "),e._m(24),t("p",[e._v("Webpack.build.config.js")]),e._v(" "),e._m(25),t("p",[e._v("打包结果：")]),e._v(" "),e._m(26),e._v(" "),t("p",[e._v("分析结果")]),e._v(" "),e._m(27)])},[function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"webpack打包优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包优化","aria-hidden":"true"}},[this._v("#")]),this._v(" Webpack打包优化")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("当今打包工具众多，诸如"),t("code",[e._v("grunt")]),e._v("，"),t("code",[e._v("gulp")]),e._v("，"),t("code",[e._v("rollup")]),e._v("，"),t("code",[e._v("webpack")]),e._v("，"),t("code",[e._v("parcel")]),e._v("... webpack从中脱颖而出，各大框架基本都基于webpack做了自己的cli。本人开发技术栈为vue、react，之前一直都是使用官方scaffold，并没有花心思研究webpack，因为现在遇到了相关的需求，导致一发不可收拾。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("blog的webpack版本为："),n("code",[this._v("4.11.1")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"初构webpack配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初构webpack配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 初构webpack配置")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-configuration.png",alt:"webpack-configuration"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-configuration2.png",alt:"webpack-configuration2"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("配置"),n("code",[this._v("webpack.base.config.js")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("const happyThreadPool = Happypack.ThreadPool({ size: os.cpus().length })\nconst createHappyPlugin = (id, loaders) => {\n    return new Happypack({\n        id,\n        loaders,\n        threadPool: happyThreadPool\n    })\n}\nmodule: {\n    rules: [\n    {\n        test: /\\.js$/,\n        loader: 'eslint-loader',\n        exclude: /node_modules/\n    },\n    {\n        enforce: 'pre',\n        test: /\\.vue$/,\n        loader: 'eslint-loader',\n        exclude: /node_modules/\n    },\n    {\n        test: /\\.js$/,\n        loader: 'happypack/loader?id=happy-babel-js',\n        exclude: '/node_modules/',\n        include: [resolve('src')]\n    },\n    {\n        test: /\\.css$/,\n        use: [\n            env !== 'production' ? 'style-loader' : MiniCssExtractPlugin.loader,\n            'css-loader'\n        ]\n    },\n    {\n        test: /\\.less$/,\n        use: [\n            env !== 'production' ? 'style-loader' : MiniCssExtractPlugin.loader, // create style nodes from js string\n            'css-loader', // translate css into commonjs\n            'less-loader' // compile less to css\n    \t]\n    },\n    {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n            limit: 10000,\n            name: 'img/[name].[hash:8].[ext]'\n        }\n    },\n    {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n            limit: 10000,\n            name: 'fonts/[names].[hash:8].[ext]'\n        }\n    },\n    {\n        test: /\\.md$/,\n        loader: 'happypack/loader?id=happy-md',\n        options: markdown\n    },\n    {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        include: [resolve('src')],\n        exclude: /node_modules/,\n        options: {\n            loaders: {\n                css: [\n                    env !== 'production' ? 'vue-style-loader' : MiniCssExtractPlugin.loader\n                ],\n                less: [\n                    env !== 'production' ? 'vue-style-loader' : MiniCssExtractPlugin.loader,\n                    'less-loader'\n                ]\n            }\n    \t}\n    }\n    ]\n},\nplugins: [\n    new ProgressBarPlugin({\n        format: '  build [:bar]' + chalk.green.bold(':percent') + ':elapsed seconds'\n    }),\n    // make sure to include the plugin for the magic\n    new VueLoaderPlugin(),\n    createHappyPlugin('happy-babel-js', ['babel-loader']),\n    createHappyPlugin('happy-md', ['vue-markdown-loader']),\n    // eslint-loader seem to try to access this.options which was removed.\n    new webpack.LoaderOptionsPlugin({ options: {} })\n],\nresolve: {\n    extensions: ['.vue', '.js', '.json'],\n    modules: [\n    \tresolve('src'),\n    \t'node_modules'\n    ],\n    alias: {\n        'vue$': 'vue/dist/vue.esm.js',\n        '@': resolve('src')\n    }\n}\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("配置"),n("code",[this._v("webpack.dev.config.js")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("mode: 'development',\nentry: {\n\tapp: './src/main.js'\n},\noutput: {\n    filename: 'js/[name].js',\n    path: resolve('dist'),\n    publicPath: '/'\n},\ndevtool: '#cheap-module-eval-source-map',\ndevServer: {\n    contentBase: resolve('/'),\n    compress: true,\n    hot: true,\n    inline: true,\n    publicPath: '/',\n    port: '1574',\n    stats: 'minimal',\n    host: 'localhost'\n},\nplugins: [\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NamedModulesPlugin(),\n    new HtmlWebpackPlugin({\n        filename: 'index.html',\n        template: 'index.html',\n        inject: true,\n        chunks: ['app']\n    })\n]\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("配置"),n("code",[this._v("webpack.build.config.js")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("mode: 'production',\n// v1.0 vendor include vue/vue-router/vuex\nentry: {\n    'app': './src/main.js',\n    'vendor': [\n        'vue',\n        'vue-router',\n        'vuex'\n    ]\n},\noutput: {\n    path: resolve('my-blog'),\n    publicPath: '/my-blog/',\n    filename: 'js/[name].[chunkhash:8].js',\n    chunkFilename: 'js/[id].[chunhash:8].js'\n},\n// 用以下配置也行\n// optimization: {\n//     minimizer: [\n//         new ParallelUglifyPlugin({\n//             cache: true,\n//             sourceMap: true\n//         }),\n//         new OptimizeCSSAssetsPlugin({})\n//     ]\n// },\nplugins: [\n    // scope hoisting(作用域提升)\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // extract css into its own file\n    new MiniCssExtractPlugin({\n    \tfilename: 'css/[name].[contenthash:8].css'\n    }),\n    // compress extracted css.\n    new OptimizeCSSAssetsPlugin({}),\n    new webpack.LoaderOptionsPlugin({\n        minimize: true,\n        debug: false\n    }),\n    // replace 'uglifyjs-webpack-plugin'\n    new ParallelUglifyPlugin({\n        cacheDir: '.cache/',\n        uglifyJS: {\n            output: {\n                comments: false,\n                beautify: false\n            },\n            compress: {\n                warnings: false,\n                drop_console: true,\n                collapse_vars: true\n            }\n        }\n    }),\n    new HtmlWebpackPlugin({\n        filename: 'index.html',\n        template: 'index.html',\n        inject: true,\n        minify: {\n            removeComments: true,\n            collapseWhitespace: true,\n            removeAttributeQuotes: true\n        },\n        chunks: ['vendor', 'app'],\n        chunksSortMode: 'dependency'\n    })\n]\n")])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("这个版本中，使用到"),t("code",[e._v("happypack")]),e._v("、"),t("code",[e._v("mini-css-extract-plugin")]),e._v("、"),t("code",[e._v("optimize-css-assets-plugin")]),e._v("、"),t("code",[e._v("webpack-parallel-uglify-plugin")]),e._v("、"),t("code",[e._v("ModuleConcatenationPlugin")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[t("p",[e._v("happypack：定义happypack/loader?id=xx和创建Happypack({id}) plugin，用id关联。将原来的单进程loader执行，扩展为多进程模式，提高编译速度")])]),e._v(" "),t("li",[t("p",[e._v("mini-css-extract-plugin：与extract-text-webpack-plugin相比，官方文档描述：")]),e._v(" "),t("ol",[t("li",[e._v("Async loading")]),e._v(" "),t("li",[e._v("No duplicate compilation(performance)")]),e._v(" "),t("li",[e._v("Easier to use")]),e._v(" "),t("li",[e._v("Specific to CSS")]),e._v(" "),t("li",[e._v("support HMR in the future")])]),e._v(" "),t("p",[e._v("标配using preloaded or inlined CSS, Extracting all CSS in a single file, 还可以 extracting CSS based on entry, prevent the CSS duplication issue one  had with the ExtractTextPlugin(以后会试试)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function recursiveIssuer(m) {\n    if (m.issuer) {\n        return recursiveIssuer(m.issuer)\n    } else if (m.name) {\n        return m.name\n    } else {\n        return false\n    }\n}\n...\nentry: {\n    foo: resolve('src/foo'),\n    bar: resolve('src/bar')\n},\noptimization: {\n    splitChunks: {\n        cacheGroups: {\n            fooStyles: {\n                name: 'foo',\n                test: (m, c, entry='foo') => m.constructor.name === 'CssModule' && recursiveIssuer(m) === entry,\n                chunks: 'all',\n                enforce: true\n            },\n            barStyles: {\n                name: 'bar',\n                test: (m, c, entry='bar') => m.constructor.name === 'CssModule' && recursiveIssuer(m) === entry,\n                chunks: 'all',\n                enforce: true\n            }\n        }\n    }\n}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("optimize-css-assets-webpack-plugin：optimize/minimize the CSS，solve duplicate CSS.")])]),e._v(" "),t("li",[t("p",[e._v("webpack-parallel-uglify-plugin：顾名思义，就是提升编译速度的升级版的webpack-uglify-plugin，功能一致。")])]),e._v(" "),t("li",[t("p",[e._v("ModuleConcatenationPlugin：原先每个bundle都独立在一个闭包中，处理速度会减弱。webpack结合了rollup和closure Compiler将所有模块通过定义变量的方式提到一个闭包中，提升了代码的执行速度，俗称作用域提升(scope hoisting)。**注意：**使用作用域提升，必须要用ECMAScript模块语法（es6）。")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("存在很大的问题，因为实际整个真实的代码就只有短短的几行，却打包出了vendor(122kb),app(96kb)。这是觉得不能忍的，缺少"),t("code",[e._v("externals")]),e._v("、"),t("code",[e._v("Dllplugin")]),e._v("、"),t("code",[e._v("DllReferencePlugin")]),e._v("、"),t("code",[e._v("Tree shaking")]),e._v("、"),t("code",[e._v("split chunks")]),e._v("、"),t("code",[e._v("dynamic import")]),e._v("，接下来要一一加上。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-version1.png",alt:"webpack-version1"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-configuration-problem1.png",alt:"webpack-configuration-problem1"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("li",[n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-configuration-problem2.png",alt:"webpack-configuration-problem2"}})]),this._v(" "),n("p",[this._v("原因：eslint升级到4.0.0以上后，eslint-plugin-html和eslint之间会有冲突，总之我是降版本解决，附上版本号")]),this._v(" "),n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-configuration-solve2.png",alt:"webpack-configuration-solve2"}})])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"优化之analyz"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化之analyz","aria-hidden":"true"}},[this._v("#")]),this._v(" 优化之analyz")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-performance-anlyz1.png",alt:"webpack-performance-anlyz1"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-performance-anlyz2.png",alt:"webpack-performance-anlyz2"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"优化之dllplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化之dllplugin","aria-hidden":"true"}},[this._v("#")]),this._v(" 优化之Dllplugin")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("自webpack升级到v4以后，"),n("code",[this._v("CommonsChunkPlugin")]),this._v("被移除，官网推荐使用DllPlugin。DllPlugin就是升级版的CommonsChunkPlugin，但是解决了CommonsChunkPlugin带来的很多问题，例如，在打包时，都会给每个打包文件后缀加上hash，以至于每次那些基本不会发生变得的文件，一样会改变hash，这是发布中无法接受的。DllPlugin将vendor提取出来，通过单独打包，生成对应的manifest.json和vendor.dll.js。manifest.json用于在打build包时，检索bundle会和它的内部id比对，成功即不创建新的bundle，引用vendor.dll.js中的。下面列下配置：")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("mode: process.env.NODE_ENV === 'production' ? 'production' : 'development',\nentry: {\n    vendor: [\n        'vue/dist/vue.min.js',\n        'vue-router',\n        'vuex'\n    ]\n},\noutput: {\n    path: resolve('static/js'),\n    filename: '[name].dll.js',\n    library: '[name]_library'\n},\nmodule: {\n    rules: [\n        {\n            test: /\\.vue$/,\n            loader: 'vue-loader'\n        },\n        {\n            test: /\\.js$/,\n            loader: 'babel-loader',\n            exclude: /node_modules/\n        }\n    ]\n},\noptimization: {\n    minimizer: [\n        new ParallelUglifyPlugin({\n            cache: true,\n            sourceMap: true\n        }),\n        new OptimizeCssAssetsPlugin({})\n    ]\n},\nplugins: [\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    new webpack.DllPlugin({\n        path: resolve('webpack/[name]-manifest.json'),\n        name: '[name]_library'\n    })\n]\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("new webpack.DllReferencePlugin({\n    context: resolve(''),\n    manifest: require('./vendor-manifest.json')\n}),\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-version1-3.png",alt:"webpack-version1-3"}})])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"http://reyshieh.com/assets/webpack-performance-anlyz3.png",alt:"webpack-performance-anlyz3"}})])}],!1,null,null,null);a.options.__file="webpack-perf.md";n.default=a.exports}}]);